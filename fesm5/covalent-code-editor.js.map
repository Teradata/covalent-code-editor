{"version":3,"file":"covalent-code-editor.js","sources":["ng://@covalent/code-editor/code-editor.utils.ts","ng://@covalent/code-editor/code-editor.component.ts","ng://@covalent/code-editor/code-editor.module.ts"],"sourcesContent":["import { Subject, Observable } from 'rxjs';\n\n/**\n * Waits until monaco has been loaded so we can reference its global object.\n */\nexport function waitUntilMonacoReady(): Observable<void> {\n  let monacoReady$: Subject<void> = new Subject<void>();\n\n  // create interval to check if monaco has been loaded\n  let interval: any = setInterval(() => {\n    if (isMonacoLoaded()) {\n      // clear interval when monaco has been loaded\n      clearInterval(interval);\n      monacoReady$.next();\n      monacoReady$.complete();\n    }\n  }, 100);\n  return monacoReady$.asObservable();\n}\n\n/**\n * Check if monaco has been loaded\n */\nexport function isMonacoLoaded(): boolean {\n  return typeof (<any>window).monaco === 'object';\n}\n\n/**\n * Loads monaco\n */\nexport function loadMonaco(): void {\n  // check if the script tag has been created in case another code component has done this already\n  if (!document.getElementById('monaco-loader-script')) {\n    const onGotAmdLoader: () => void = () => {\n      // Load monaco\n      (<any>window).require.config({ paths: { vs: 'assets/monaco/vs' } });\n      (<any>window).require(['vs/editor/editor.main'], () => {\n        // TODO\n      });\n    };\n\n    // Load AMD loader if necessary\n    if (!(<any>window).require) {\n      const loaderScript: HTMLScriptElement = document.createElement('script');\n      loaderScript.id = 'monaco-loader-script';\n      loaderScript.type = 'text/javascript';\n      loaderScript.src = 'assets/monaco/vs/loader.js';\n      loaderScript.addEventListener('load', onGotAmdLoader);\n      document.body.appendChild(loaderScript);\n    } else {\n      onGotAmdLoader();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  forwardRef,\n  NgZone,\n  ChangeDetectorRef,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { fromEvent, merge, timer } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { waitUntilMonacoReady, loadMonaco } from './code-editor.utils';\n\nconst noop: any = () => {\n  // empty method\n};\n\n// counter for ids to allow for multiple editors on one page\nlet uniqueCounter: number = 0;\n// declare all the built in electron objects\ndeclare const electron: any;\ndeclare const monaco: any;\n\n@Component({\n  selector: 'td-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdCodeEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TdCodeEditorComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnDestroy {\n  private _destroy: Subject<boolean> = new Subject<boolean>();\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _heightSubject: Subject<number> = new Subject<number>();\n\n  private _editorStyle: string = 'width:100%;height:100%;border:1px solid grey;';\n  private _appPath: string = '';\n  private _isElectronApp: boolean = false;\n  private _webview: any;\n  private _value: string = '';\n  private _theme: string = 'vs';\n  private _language: string = 'javascript';\n  private _subject: Subject<string> = new Subject();\n  private _editorInnerContainer: string = 'editorInnerContainer' + uniqueCounter++;\n  private _editorNodeModuleDirOverride: string = '';\n  private _editor: any;\n  private _editorProxy: any;\n  private _componentInitialized: boolean = false;\n  private _fromEditor: boolean = false;\n  private _editorOptions: any = {};\n  private _isFullScreen: boolean = false;\n  private _keycode: any;\n  private _setValueTimeout: any;\n  private initialContentChange: boolean = true;\n\n  @ViewChild('editorContainer', { static: true }) _editorContainer: ElementRef;\n\n  /**\n   * automaticLayout?: boolean\n   * @deprecated in favor of our own resize implementation.\n   */\n  @Input('automaticLayout')\n  set automaticLayout(automaticLayout: boolean) {\n    // tslint:disable-next-line\n    console.warn(\n      '[automaticLayout] has been deprecated in favor of our own resize implementation and will be removed on 3.0.0',\n    );\n  }\n\n  /**\n   * editorInitialized: function($event)\n   * Event emitted when editor is first initialized\n   */\n  @Output('editorInitialized') onEditorInitialized: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorConfigurationChanged: function($event)\n   * Event emitted when editor's configuration changes\n   */\n  @Output('editorConfigurationChanged') onEditorConfigurationChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorLanguageChanged: function($event)\n   * Event emitted when editor's Language changes\n   */\n  @Output('editorLanguageChanged') onEditorLanguageChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorValueChange: function($event)\n   * Event emitted any time something changes the editor value\n   */\n  @Output('editorValueChange') onEditorValueChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * The change event notifies you about a change happening in an input field.\n   * Since the component is not a native Angular component have to specifiy the event emitter ourself\n   */\n  @Output('change') onChange: EventEmitter<void> = new EventEmitter<void>();\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * Set if using Electron mode when object is created\n   */\n  constructor(private zone: NgZone, private _changeDetectorRef: ChangeDetectorRef, private _elementRef: ElementRef) {\n    // since accessing the window object need this check so serverside rendering doesn't fail\n    if (typeof document === 'object' && !!document) {\n      /* tslint:disable-next-line */\n      this._isElectronApp = (<any>window)['process'] ? true : false;\n      if (this._isElectronApp) {\n        this._appPath = electron.remote.app\n          .getAppPath()\n          .split('\\\\')\n          .join('/');\n      }\n    }\n  }\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    // Clear any timeout that might overwrite this value set in the future\n    if (this._setValueTimeout) {\n      clearTimeout(this._setValueTimeout);\n    }\n    this._value = value;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        if (this._webview.send !== undefined) {\n          // don't want to keep sending content if event came from IPC, infinite loop\n          if (!this._fromEditor) {\n            this._webview.send('setEditorContent', value);\n          }\n          this.onEditorValueChange.emit(undefined);\n          this.propagateChange(this._value);\n          this.onChange.emit(undefined);\n          this._fromEditor = false;\n        } else {\n          // Editor is not loaded yet, try again in half a second\n          this._setValueTimeout = setTimeout(() => {\n            this.value = value;\n          }, 500);\n        }\n      } else {\n        if (this._editor && this._editor.setValue) {\n          // don't want to keep sending content if event came from the editor, infinite loop\n          if (!this._fromEditor) {\n            this._editor.setValue(value);\n          }\n          this.onEditorValueChange.emit(undefined);\n          this.propagateChange(this._value);\n          this.onChange.emit(undefined);\n          this._fromEditor = false;\n          this.zone.run(() => (this._value = value));\n        } else {\n          // Editor is not loaded yet, try again in half a second\n          this._setValueTimeout = setTimeout(() => {\n            this.value = value;\n          }, 500);\n        }\n      }\n    } else {\n      this._setValueTimeout = setTimeout(() => {\n        this.value = value;\n      }, 500);\n    }\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    // do not write if null or undefined\n    // tslint:disable-next-line\n    if (value != undefined) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * getEditorContent?: function\n   * Returns the content within the editor\n   */\n  getValue(): Observable<string> {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('getEditorContent');\n        return this._subject.asObservable();\n      } else if (this._editor) {\n        this._value = this._editor.getValue();\n        setTimeout(() => {\n          this._subject.next(this._value);\n          this._subject.complete();\n          this._subject = new Subject();\n          this.onEditorValueChange.emit(undefined);\n        });\n        return this._subject.asObservable();\n      }\n    }\n  }\n\n  /**\n   * language?: string\n   * language used in editor\n   */\n  @Input('language')\n  set language(language: string) {\n    this._language = language;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setLanguage', language);\n      } else if (this._editor) {\n        let currentValue: string = this._editor.getValue();\n        this._editor.dispose();\n        let myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        this._editor = monaco.editor.create(\n          myDiv,\n          Object.assign(\n            {\n              value: currentValue,\n              language: language,\n              theme: this._theme,\n            },\n            this.editorOptions,\n          ),\n        );\n        this._editor.getModel().onDidChangeContent((e: any) => {\n          this._fromEditor = true;\n          this.writeValue(this._editor.getValue());\n        });\n        this.onEditorConfigurationChanged.emit(undefined);\n        this.onEditorLanguageChanged.emit(undefined);\n      }\n    }\n  }\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * registerLanguage?: function\n   * Registers a custom Language within the editor\n   */\n  registerLanguage(language: any): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('registerLanguage', language);\n      } else if (this._editor) {\n        let currentValue: string = this._editor.getValue();\n        this._editor.dispose();\n\n        for (let i: number = 0; i < language.completionItemProvider.length; i++) {\n          let provider: any = language.completionItemProvider[i];\n          /* tslint:disable-next-line */\n          provider.kind = eval(provider.kind);\n        }\n        for (let i: number = 0; i < language.monarchTokensProvider.length; i++) {\n          let monarchTokens: any = language.monarchTokensProvider[i];\n          /* tslint:disable-next-line */\n          monarchTokens[0] = eval(monarchTokens[0]);\n        }\n        monaco.languages.register({ id: language.id });\n\n        monaco.languages.setMonarchTokensProvider(language.id, {\n          tokenizer: {\n            root: language.monarchTokensProvider,\n          },\n        });\n\n        // Define a new theme that constains only rules that match this language\n        monaco.editor.defineTheme(language.customTheme.id, language.customTheme.theme);\n        this._theme = language.customTheme.id;\n\n        monaco.languages.registerCompletionItemProvider(language.id, {\n          provideCompletionItems: () => {\n            return language.completionItemProvider;\n          },\n        });\n\n        let css: HTMLStyleElement = document.createElement('style');\n        css.type = 'text/css';\n        css.innerHTML = language.monarchTokensProviderCSS;\n        document.body.appendChild(css);\n        this.onEditorConfigurationChanged.emit(undefined);\n      }\n    }\n  }\n\n  /**\n   * style?: string\n   * css style of the editor on the page\n   */\n  @Input('editorStyle')\n  set editorStyle(editorStyle: string) {\n    this._editorStyle = editorStyle;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorStyle', { language: this._language, theme: this._theme, style: editorStyle });\n      } else if (this._editor) {\n        let containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        containerDiv.setAttribute('style', editorStyle);\n        let currentValue: string = this._editor.getValue();\n        this._editor.dispose();\n        let myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        this._editor = monaco.editor.create(\n          myDiv,\n          Object.assign(\n            {\n              value: currentValue,\n              language: this._language,\n              theme: this._theme,\n            },\n            this.editorOptions,\n          ),\n        );\n        this._editor.getModel().onDidChangeContent((e: any) => {\n          this._fromEditor = true;\n          this.writeValue(this._editor.getValue());\n        });\n      }\n    }\n  }\n  get editorStyle(): string {\n    return this._editorStyle;\n  }\n\n  /**\n   * theme?: string\n   * Theme to be applied to editor\n   */\n  @Input('theme')\n  set theme(theme: string) {\n    this._theme = theme;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorOptions', { theme: theme });\n      } else if (this._editor) {\n        this._editor.updateOptions({ theme: theme });\n        this.onEditorConfigurationChanged.emit(undefined);\n      }\n    }\n  }\n  get theme(): string {\n    return this._theme;\n  }\n\n  /**\n   * fullScreenKeyBinding?: number\n   * See here for key bindings https://microsoft.github.io/monaco-editor/api/enums/monaco.keycode.html\n   * Sets the KeyCode for shortcutting to Fullscreen mode\n   */\n  @Input('fullScreenKeyBinding')\n  set fullScreenKeyBinding(keycode: number[]) {\n    this._keycode = keycode;\n  }\n  get fullScreenKeyBinding(): number[] {\n    return this._keycode;\n  }\n\n  /**\n   * editorOptions?: Object\n   * Options used on editor instantiation. Available options listed here:\n   * https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroptions.html\n   */\n  @Input('editorOptions')\n  set editorOptions(editorOptions: any) {\n    this._editorOptions = editorOptions;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorOptions', editorOptions);\n      } else if (this._editor) {\n        this._editor.updateOptions(editorOptions);\n        this.onEditorConfigurationChanged.emit(undefined);\n      }\n    }\n  }\n  get editorOptions(): any {\n    return this._editorOptions;\n  }\n\n  /**\n   * layout method that calls layout method of editor and instructs the editor to remeasure its container\n   */\n  layout(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('layout');\n      } else if (this._editor) {\n        this._editor.layout();\n      }\n    }\n  }\n\n  /**\n   * Returns if in Electron mode or not\n   */\n  get isElectronApp(): boolean {\n    return this._isElectronApp;\n  }\n\n  /**\n   * Returns if in Full Screen Mode or not\n   */\n  get isFullScreen(): boolean {\n    return this._isFullScreen;\n  }\n\n  /**\n   * setEditorNodeModuleDirOverride function that overrides where to look\n   * for the editor node_module. Used in tests for Electron or anywhere that the\n   * node_modules are not in the expected location.\n   */\n  setEditorNodeModuleDirOverride(dirOverride: string): void {\n    this._editorNodeModuleDirOverride = dirOverride;\n    this._appPath = dirOverride;\n  }\n\n  /**\n   * ngOnInit only used for Electron version of editor\n   * This is where the webview is created to sandbox away the editor\n   */\n  ngOnInit(): void {\n    let editorHTML: string = '';\n    if (this._isElectronApp) {\n      editorHTML = `<!DOCTYPE html>\n            <html style=\"height:100%\">\n            <head>\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" >\n                <link rel=\"stylesheet\" data-name=\"vs/editor/editor.main\"\n                    href=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/editor/editor.main.css\">\n            </head>\n            <body style=\"height:100%;width: 100%;margin: 0;padding: 0;overflow: hidden;\">\n            <div id=\"${this._editorInnerContainer}\" style=\"width:100%;height:100%;${this._editorStyle}\"></div>\n            <script>\n                // Get the ipcRenderer of electron for communication\n                const {ipcRenderer} = require('electron');\n            </script>\n            <script src=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/loader.js\"></script>\n            <script>\n                var editor;\n                var theme = '${this._theme}';\n                var value = '${this._value}';\n\n                require.config({\n                    baseUrl: '${this._appPath}/assets/monaco'\n                });\n                self.module = undefined;\n                self.process.browser = true;\n\n                require(['vs/editor/editor.main'], function() {\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: value,\n                        language: '${this.language}',\n                        theme: '${this._theme}',\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    editor.getModel().onDidChangeContent( (e)=> {\n                        ipcRenderer.sendToHost(\"onEditorContentChange\", editor.getValue());\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'fullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [${this._keycode}],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        editorDiv.webkitRequestFullscreen();\n                      }\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'exitfullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Exit Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [9],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        document.webkitExitFullscreen();\n                      }\n                    });\n                    ipcRenderer.sendToHost(\"onEditorInitialized\", this._editor);\n                });\n\n                // return back the value in the editor to the mainview\n                ipcRenderer.on('getEditorContent', function(){\n                    ipcRenderer.sendToHost(\"editorContent\", editor.getValue());\n                });\n\n                // set the value of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorContent', function(event, data){\n                    value = data;\n                    editor.setValue(data);\n                });\n\n                // set the style of the editor container div\n                ipcRenderer.on('setEditorStyle', function(event, data){\n                    var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                    editorDiv.style = data.style;\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: currentValue,\n                        language: data.language,\n                        theme: data.theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                });\n\n                // set the options of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorOptions', function(event, data){\n                    editor.updateOptions(data);\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                });\n\n                // set the language of the editor from what was sent from the mainview\n                ipcRenderer.on('setLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: currentValue,\n                        language: data,\n                        theme: theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                    ipcRenderer.sendToHost(\"onEditorLanguageChanged\", '');\n                });\n\n                // register a new language with editor\n                ipcRenderer.on('registerLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n\n                    for (var i = 0; i < data.completionItemProvider.length; i++) {\n                        var provider = data.completionItemProvider[i];\n                        provider.kind = eval(provider.kind);\n                    }\n                    for (var i = 0; i < data.monarchTokensProvider.length; i++) {\n                        var monarchTokens = data.monarchTokensProvider[i];\n                        monarchTokens[0] = eval(monarchTokens[0]);\n                    }\n                    monaco.languages.register({ id: data.id });\n\n                    monaco.languages.setMonarchTokensProvider(data.id, {\n                        tokenizer: {\n                            root: data.monarchTokensProvider\n                        }\n                    });\n\n                    // Define a new theme that constains only rules that match this language\n                    monaco.editor.defineTheme(data.customTheme.id, data.customTheme.theme);\n                    theme = data.customTheme.id;\n\n                    monaco.languages.registerCompletionItemProvider(data.id, {\n                        provideCompletionItems: () => {\n                            return data.completionItemProvider\n                        }\n                    });\n\n                    var css = document.createElement(\"style\");\n                    css.type = \"text/css\";\n                    css.innerHTML = data.monarchTokensProviderCSS;\n                    document.body.appendChild(css);\n\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                });\n\n                // Instruct the editor to remeasure its container\n                ipcRenderer.on('layout', function(){\n                    editor.layout();\n                });\n\n                // Instruct the editor go to full screen mode\n                ipcRenderer.on('showFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitRequestFullscreen();\n                });\n\n                // Instruct the editor exit full screen mode\n                ipcRenderer.on('exitFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitExitFullscreen();\n                });\n\n                ipcRenderer.on('dispose', function(){\n                  editor.dispose();\n                });\n\n                // need to manually resize the editor any time the window size\n                // changes. See: https://github.com/Microsoft/monaco-editor/issues/28\n                window.addEventListener(\"resize\", function resizeEditor() {\n                    editor.layout();\n                });\n            </script>\n            </body>\n            </html>`;\n\n      // dynamically create the Electron Webview Element\n      // this will sandbox the monaco code into its own DOM and its own\n      // javascript instance. Need to do this to avoid problems with monaco\n      // using AMD Requires and Electron using Node Requires\n      // see https://github.com/Microsoft/monaco-editor/issues/90\n      this._webview = document.createElement('webview');\n      this._webview.setAttribute('nodeintegration', 'true');\n      this._webview.setAttribute('disablewebsecurity', 'true');\n      // take the html content for the webview and base64 encode it and use as the src tag\n      this._webview.setAttribute('src', 'data:text/html;base64,' + window.btoa(editorHTML));\n      this._webview.setAttribute('style', 'display:inline-flex; width:100%; height:100%');\n      //  this._webview.addEventListener('dom-ready', () => {\n      //     this._webview.openDevTools();\n      //  });\n\n      // Process the data from the webview\n      this._webview.addEventListener('ipc-message', (event: any) => {\n        if (event.channel === 'editorContent') {\n          this._fromEditor = true;\n          this.writeValue(event.args[0]);\n          this._subject.next(this._value);\n          this._subject.complete();\n          this._subject = new Subject();\n        } else if (event.channel === 'onEditorContentChange') {\n          this._fromEditor = true;\n          this.writeValue(event.args[0]);\n          if (this.initialContentChange) {\n            this.initialContentChange = false;\n            this.layout();\n          }\n        } else if (event.channel === 'onEditorInitialized') {\n          this._componentInitialized = true;\n          this._editorProxy = this.wrapEditorCalls(this._editor);\n          this.onEditorInitialized.emit(this._editorProxy);\n        } else if (event.channel === 'onEditorConfigurationChanged') {\n          this.onEditorConfigurationChanged.emit(undefined);\n        } else if (event.channel === 'onEditorLanguageChanged') {\n          this.onEditorLanguageChanged.emit(undefined);\n        }\n      });\n\n      // append the webview to the DOM\n      this._editorContainer.nativeElement.appendChild(this._webview);\n    }\n  }\n\n  /**\n   * ngAfterViewInit only used for browser version of editor\n   * This is where the AMD Loader scripts are added to the browser and the editor scripts are \"required\"\n   */\n  ngAfterViewInit(): void {\n    if (!this._isElectronApp) {\n      loadMonaco();\n      waitUntilMonacoReady()\n        .pipe(takeUntil(this._destroy))\n        .subscribe(() => {\n          this.initMonaco();\n        });\n    }\n    merge(\n      fromEvent(window, 'resize').pipe(debounceTime(100)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._heightSubject.asObservable().pipe(distinctUntilChanged()),\n    )\n      .pipe(\n        takeUntil(this._destroy),\n        debounceTime(100),\n      )\n      .subscribe(() => {\n        this.layout();\n        this._changeDetectorRef.markForCheck();\n      });\n    timer(500, 250)\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this._elementRef && this._elementRef.nativeElement) {\n          this._widthSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width);\n          this._heightSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height);\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._changeDetectorRef.detach();\n    if (this._webview) {\n      this._webview.send('dispose');\n    } else if (this._editor) {\n      this._editor.dispose();\n    }\n    this._destroy.next(true);\n    this._destroy.unsubscribe();\n  }\n\n  /**\n   * showFullScreenEditor request for full screen of Code Editor based on its browser type.\n   */\n  public showFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('showFullScreenEditor');\n      } else {\n        const codeEditorElement: HTMLDivElement = this._editorContainer.nativeElement as HTMLDivElement;\n        const fullScreenMap: Object = {\n          // Chrome\n          requestFullscreen: () => codeEditorElement.requestFullscreen(),\n          // Safari\n          webkitRequestFullscreen: () => (<any>codeEditorElement).webkitRequestFullscreen(),\n          // IE\n          msRequestFullscreen: () => (<any>codeEditorElement).msRequestFullscreen(),\n          // Firefox\n          mozRequestFullScreen: () => (<any>codeEditorElement).mozRequestFullScreen(),\n        };\n\n        for (const handler of Object.keys(fullScreenMap)) {\n          if (codeEditorElement[handler]) {\n            fullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = true;\n  }\n\n  /**\n   * exitFullScreenEditor request to exit full screen of Code Editor based on its browser type.\n   */\n  public exitFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('exitFullScreenEditor');\n      } else {\n        const exitFullScreenMap: object = {\n          // Chrome\n          exitFullscreen: () => document.exitFullscreen(),\n          // Safari\n          webkitExitFullscreen: () => (<any>document).webkitExitFullscreen(),\n          // Firefox\n          mozCancelFullScreen: () => (<any>document).mozCancelFullScreen(),\n          // IE\n          msExitFullscreen: () => (<any>document).msExitFullscreen(),\n        };\n\n        for (const handler of Object.keys(exitFullScreenMap)) {\n          if (document[handler]) {\n            exitFullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = false;\n  }\n\n  /**\n   * addFullScreenModeCommand used to add the fullscreen option to the context menu\n   */\n  private addFullScreenModeCommand(): void {\n    this._editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'fullScreen',\n      // A label of the action that will be presented to the user.\n      label: 'Full Screen',\n      // An optional array of keybindings for the action.\n      contextMenuGroupId: 'navigation',\n      keybindings: this._keycode,\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed: any) => {\n        this.showFullScreenEditor();\n      },\n    });\n  }\n\n  /**\n   * wrapEditorCalls used to proxy all the calls to the monaco editor\n   * For calls for Electron use this to call the editor inside the webview\n   */\n  private wrapEditorCalls(obj: any): any {\n    let that: any = this;\n    let handler: any = {\n      get(target: any, propKey: any, receiver: any): any {\n        return async (...args: any): Promise<any> => {\n          if (that._componentInitialized) {\n            if (that._webview) {\n              const executeJavaScript: Function = (code: string) =>\n                new Promise((resolve: any) => {\n                  that._webview.executeJavaScript(code, resolve);\n                });\n              let result: any = await executeJavaScript('editor.' + propKey + '(' + args + ')');\n              return result;\n            } else {\n              const origMethod: any = target[propKey];\n              let result: any = await origMethod.apply(that._editor, args);\n              // since running javascript code manually need to force Angular to detect changes\n              setTimeout(() => {\n                that.zone.run(() => {\n                  // tslint:disable-next-line\n                  if (!that._changeDetectorRef['destroyed']) {\n                    that._changeDetectorRef.detectChanges();\n                  }\n                });\n              });\n              return result;\n            }\n          }\n        };\n      },\n    };\n    return new Proxy(obj, handler);\n  }\n\n  /**\n   * initMonaco method creates the monaco editor into the @ViewChild('editorContainer')\n   * and emit the onEditorInitialized event.  This is only used in the browser version.\n   */\n  private initMonaco(): void {\n    let containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n    containerDiv.id = this._editorInnerContainer;\n    this._editor = monaco.editor.create(\n      containerDiv,\n      Object.assign(\n        {\n          value: this._value,\n          language: this.language,\n          theme: this._theme,\n        },\n        this.editorOptions,\n      ),\n    );\n    setTimeout(() => {\n      this._editorProxy = this.wrapEditorCalls(this._editor);\n      this._componentInitialized = true;\n      this.onEditorInitialized.emit(this._editorProxy);\n    });\n    this._editor.getModel().onDidChangeContent((e: any) => {\n      this._fromEditor = true;\n      this.writeValue(this._editor.getValue());\n      if (this.initialContentChange) {\n        this.initialContentChange = false;\n        this.layout();\n      }\n    });\n    this.addFullScreenModeCommand();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdCodeEditorComponent } from './code-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TdCodeEditorComponent],\n  exports: [TdCodeEditorComponent],\n  entryComponents: [],\n  bootstrap: [TdCodeEditorComponent],\n})\nexport class CovalentCodeEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentCodeEditorModule,\n      providers: [],\n    };\n  }\n}\n"],"names":["tslib_1.__values"],"mappings":"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"}