!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("@covalent/code-editor",["exports","@angular/core","@angular/forms","rxjs","rxjs/operators","@angular/common"],t):t(((e=e||self).covalent=e.covalent||{},e.covalent["code-editor"]={}),e.ng.core,e.ng.forms,e.rxjs,e.rxjs.operators,e.ng.common)}(this,function(exports,core,forms,rxjs,operators,common){"use strict";function __awaiter(e,t,n,o){return new(n||(n=Promise))(function(i,r){function a(e){try{s(o.next(e))}catch(t){r(t)}}function d(e){try{s(o["throw"](e))}catch(t){r(t)}}function s(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(a,d)}s((o=o.apply(e,t||[])).next())})}function __generator(e,t){var n,o,i,r,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:d(0),"throw":d(1),"return":d(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function d(r){return function(d){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,o&&(i=2&r[0]?o["return"]:r[0]?o["throw"]||((i=o["return"])&&i.call(o),0):o.next)&&!(i=i.call(o,r[1])).done)return i;switch(o=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,o=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===r[0]||2===r[0])){a=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){a.label=r[1];break}if(6===r[0]&&a.label<i[1]){a.label=i[1],i=r;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(r);break}i[2]&&a.ops.pop(),a.trys.pop();continue}r=t.call(e,a)}catch(d){r=[6,d],o=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,d])}}}function __values(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}function waitUntilMonacoReady(){var e=new rxjs.Subject,t=setInterval(function(){isMonacoLoaded()&&(clearInterval(t),e.next(),e.complete())},100);return e.asObservable()}function isMonacoLoaded(){return"object"==typeof window.monaco}function loadMonaco(){if(!document.getElementById("monaco-loader-script")){var e=function(){window.require.config({paths:{vs:"assets/monaco/vs"}}),window.require(["vs/editor/editor.main"],function(){})};if(window.require)e();else{var t=document.createElement("script");t.id="monaco-loader-script",t.type="text/javascript",t.src="assets/monaco/vs/loader.js",t.addEventListener("load",e),document.body.appendChild(t)}}}var noop=function(){},uniqueCounter=0,TdCodeEditorComponent=function(){function TdCodeEditorComponent(e,t,n){this.zone=e,this._changeDetectorRef=t,this._elementRef=n,this._destroy=new rxjs.Subject,this._widthSubject=new rxjs.Subject,this._heightSubject=new rxjs.Subject,this._editorStyle="width:100%;height:100%;border:1px solid grey;",this._appPath="",this._isElectronApp=!1,this._value="",this._theme="vs",this._language="javascript",this._subject=new rxjs.Subject,this._editorInnerContainer="editorInnerContainer"+uniqueCounter++,this._editorNodeModuleDirOverride="",this._componentInitialized=!1,this._fromEditor=!1,this._editorOptions={},this._isFullScreen=!1,this.initialContentChange=!0,this.editorInitialized=new core.EventEmitter,this.editorConfigurationChanged=new core.EventEmitter,this.editorLanguageChanged=new core.EventEmitter,this.editorValueChange=new core.EventEmitter,this.change=new core.EventEmitter,this.propagateChange=function(e){},this.onTouched=function(){return noop},"object"==typeof document&&document&&(this._isElectronApp=!!window.process,this._isElectronApp&&(this._appPath=electron.remote.app.getAppPath().split("\\").join("/")))}return Object.defineProperty(TdCodeEditorComponent.prototype,"automaticLayout",{set:function(e){console.warn("[automaticLayout] has been deprecated in favor of our own resize implementation and will be removed on 3.0.0")},enumerable:!0,configurable:!0}),Object.defineProperty(TdCodeEditorComponent.prototype,"value",{get:function(){return this._value},set:function(e){var t=this;this._setValueTimeout&&clearTimeout(this._setValueTimeout),this._value=e,this._componentInitialized?this._webview?this._webview.send!==undefined?(this._fromEditor||this._webview.send("setEditorContent",e),this.editorValueChange.emit(),this.propagateChange(this._value),this.change.emit(),this._fromEditor=!1):this._setValueTimeout=setTimeout(function(){t.value=e},500):this._editor&&this._editor.setValue?(this._fromEditor||this._editor.setValue(e),this.editorValueChange.emit(),this.propagateChange(this._value),this.change.emit(),this._fromEditor=!1,this.zone.run(function(){return t._value=e})):this._setValueTimeout=setTimeout(function(){t.value=e},500):this._setValueTimeout=setTimeout(function(){t.value=e},500)},enumerable:!0,configurable:!0}),TdCodeEditorComponent.prototype.writeValue=function(e){e!=undefined&&(this.value=e)},TdCodeEditorComponent.prototype.registerOnChange=function(e){this.propagateChange=e},TdCodeEditorComponent.prototype.registerOnTouched=function(e){this.onTouched=e},TdCodeEditorComponent.prototype.getValue=function(){var e=this;if(this._componentInitialized){if(this._webview)return this._webview.send("getEditorContent"),this._subject.asObservable();if(this._editor)return this._value=this._editor.getValue(),setTimeout(function(){e._subject.next(e._value),e._subject.complete(),e._subject=new rxjs.Subject,e.editorValueChange.emit()}),this._subject.asObservable()}},Object.defineProperty(TdCodeEditorComponent.prototype,"language",{get:function(){return this._language},set:function(e){var t=this;if(this._language=e,this._componentInitialized)if(this._webview)this._webview.send("setLanguage",e);else if(this._editor){var n=this._editor.getValue();this._editor.dispose();var o=this._editorContainer.nativeElement;this._editor=monaco.editor.create(o,Object.assign({value:n,language:e,theme:this._theme},this.editorOptions)),this._editor.getModel().onDidChangeContent(function(e){t._fromEditor=!0,t.writeValue(t._editor.getValue())}),this.editorConfigurationChanged.emit(),this.editorLanguageChanged.emit()}},enumerable:!0,configurable:!0}),TdCodeEditorComponent.prototype.registerLanguage=function(language){var e_1,_a,e_2,_b;if(this._componentInitialized)if(this._webview)this._webview.send("registerLanguage",language);else if(this._editor){this._editor.dispose();try{for(var _c=__values(language.completionItemProvider),_d=_c.next();!_d.done;_d=_c.next()){var provider=_d.value;provider.kind=eval(provider.kind)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_d&&!_d.done&&(_a=_c["return"])&&_a.call(_c)}finally{if(e_1)throw e_1.error}}try{for(var _e=__values(language.monarchTokensProvider),_f=_e.next();!_f.done;_f=_e.next()){var monarchTokens=_f.value;monarchTokens[0]=eval(monarchTokens[0])}}catch(e_2_1){e_2={error:e_2_1}}finally{try{_f&&!_f.done&&(_b=_e["return"])&&_b.call(_e)}finally{if(e_2)throw e_2.error}}monaco.languages.register({id:language.id}),monaco.languages.setMonarchTokensProvider(language.id,{tokenizer:{root:language.monarchTokensProvider}}),monaco.editor.defineTheme(language.customTheme.id,language.customTheme.theme),this._theme=language.customTheme.id,monaco.languages.registerCompletionItemProvider(language.id,{provideCompletionItems:function(){return language.completionItemProvider}});var css=document.createElement("style");css.type="text/css",css.innerHTML=language.monarchTokensProviderCSS,document.body.appendChild(css),this.editorConfigurationChanged.emit()}},Object.defineProperty(TdCodeEditorComponent.prototype,"editorStyle",{get:function(){return this._editorStyle},set:function(e){var t=this;if(this._editorStyle=e,this._componentInitialized)if(this._webview)this._webview.send("setEditorStyle",{language:this._language,theme:this._theme,style:e});else if(this._editor){this._editorContainer.nativeElement.setAttribute("style",e);var n=this._editor.getValue();this._editor.dispose();var o=this._editorContainer.nativeElement;this._editor=monaco.editor.create(o,Object.assign({value:n,language:this._language,theme:this._theme},this.editorOptions)),this._editor.getModel().onDidChangeContent(function(e){t._fromEditor=!0,t.writeValue(t._editor.getValue())})}},enumerable:!0,configurable:!0}),Object.defineProperty(TdCodeEditorComponent.prototype,"theme",{get:function(){return this._theme},set:function(e){this._theme=e,this._componentInitialized&&(this._webview?this._webview.send("setEditorOptions",{theme:e}):this._editor&&(this._editor.updateOptions({theme:e}),this.editorConfigurationChanged.emit()))},enumerable:!0,configurable:!0}),Object.defineProperty(TdCodeEditorComponent.prototype,"fullScreenKeyBinding",{get:function(){return this._keycode},set:function(e){this._keycode=e},enumerable:!0,configurable:!0}),Object.defineProperty(TdCodeEditorComponent.prototype,"editorOptions",{get:function(){return this._editorOptions},set:function(e){this._editorOptions=e,this._componentInitialized&&(this._webview?this._webview.send("setEditorOptions",e):this._editor&&(this._editor.updateOptions(e),this.editorConfigurationChanged.emit()))},enumerable:!0,configurable:!0}),TdCodeEditorComponent.prototype.layout=function(){this._componentInitialized&&(this._webview?this._webview.send("layout"):this._editor&&this._editor.layout())},Object.defineProperty(TdCodeEditorComponent.prototype,"isElectronApp",{get:function(){return this._isElectronApp},enumerable:!0,configurable:!0}),Object.defineProperty(TdCodeEditorComponent.prototype,"isFullScreen",{get:function(){return this._isFullScreen},enumerable:!0,configurable:!0}),TdCodeEditorComponent.prototype.setEditorNodeModuleDirOverride=function(e){this._editorNodeModuleDirOverride=e,this._appPath=e},TdCodeEditorComponent.prototype.ngOnInit=function(){var e=this,t="";this._isElectronApp&&(t='<!DOCTYPE html>\n            <html style="height:100%">\n            <head>\n                <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n                <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >\n                <link rel="stylesheet" data-name="vs/editor/editor.main"\n                    href="file://'+this._editorNodeModuleDirOverride+'/assets/monaco/vs/editor/editor.main.css">\n            </head>\n            <body style="height:100%;width: 100%;margin: 0;padding: 0;overflow: hidden;">\n            <div id="'+this._editorInnerContainer+'" style="width:100%;height:100%;'+this._editorStyle+"\"></div>\n            <script>\n                // Get the ipcRenderer of electron for communication\n                const {ipcRenderer} = require('electron');\n            <\/script>\n            <script src=\"file://"+this._editorNodeModuleDirOverride+"/assets/monaco/vs/loader.js\"><\/script>\n            <script>\n                var editor;\n                var theme = '"+this._theme+"';\n                var value = '"+this._value+"';\n\n                require.config({\n                    baseUrl: '"+this._appPath+"/assets/monaco'\n                });\n                self.module = undefined;\n                self.process.browser = true;\n\n                require(['vs/editor/editor.main'], function() {\n                    editor = monaco.editor.create(document.getElementById('"+this._editorInnerContainer+"'), Object.assign({\n                        value: value,\n                        language: '"+this.language+"',\n                        theme: '"+this._theme+"',\n                    }, "+JSON.stringify(this.editorOptions)+"));\n                    editor.getModel().onDidChangeContent( (e)=> {\n                        ipcRenderer.sendToHost(\"onEditorContentChange\", editor.getValue());\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'fullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: ["+this._keycode+"],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('"+this._editorInnerContainer+"');\n                        editorDiv.webkitRequestFullscreen();\n                      }\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'exitfullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Exit Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [9],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('"+this._editorInnerContainer+"');\n                        document.webkitExitFullscreen();\n                      }\n                    });\n                    ipcRenderer.sendToHost(\"editorInitialized\", this._editor);\n                });\n\n                // return back the value in the editor to the mainview\n                ipcRenderer.on('getEditorContent', function(){\n                    ipcRenderer.sendToHost(\"editorContent\", editor.getValue());\n                });\n\n                // set the value of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorContent', function(event, data){\n                    value = data;\n                    editor.setValue(data);\n                });\n\n                // set the style of the editor container div\n                ipcRenderer.on('setEditorStyle', function(event, data){\n                    var editorDiv = document.getElementById('"+this._editorInnerContainer+"');\n                    editorDiv.style = data.style;\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('"+this._editorInnerContainer+"'), Object.assign({\n                        value: currentValue,\n                        language: data.language,\n                        theme: data.theme,\n                    }, "+JSON.stringify(this.editorOptions)+"));\n                });\n\n                // set the options of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorOptions', function(event, data){\n                    editor.updateOptions(data);\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                });\n\n                // set the language of the editor from what was sent from the mainview\n                ipcRenderer.on('setLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('"+this._editorInnerContainer+"'), Object.assign({\n                        value: currentValue,\n                        language: data,\n                        theme: theme,\n                    }, "+JSON.stringify(this.editorOptions)+"));\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                    ipcRenderer.sendToHost(\"editorLanguageChanged\", '');\n                });\n\n                // register a new language with editor\n                ipcRenderer.on('registerLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n\n                    for (var i = 0; i < data.completionItemProvider.length; i++) {\n                        var provider = data.completionItemProvider[i];\n                        provider.kind = eval(provider.kind);\n                    }\n                    for (var i = 0; i < data.monarchTokensProvider.length; i++) {\n                        var monarchTokens = data.monarchTokensProvider[i];\n                        monarchTokens[0] = eval(monarchTokens[0]);\n                    }\n                    monaco.languages.register({ id: data.id });\n\n                    monaco.languages.setMonarchTokensProvider(data.id, {\n                        tokenizer: {\n                            root: data.monarchTokensProvider\n                        }\n                    });\n\n                    // Define a new theme that constains only rules that match this language\n                    monaco.editor.defineTheme(data.customTheme.id, data.customTheme.theme);\n                    theme = data.customTheme.id;\n\n                    monaco.languages.registerCompletionItemProvider(data.id, {\n                        provideCompletionItems: () => {\n                            return data.completionItemProvider\n                        }\n                    });\n\n                    var css = document.createElement(\"style\");\n                    css.type = \"text/css\";\n                    css.innerHTML = data.monarchTokensProviderCSS;\n                    document.body.appendChild(css);\n\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                });\n\n                // Instruct the editor to remeasure its container\n                ipcRenderer.on('layout', function(){\n                    editor.layout();\n                });\n\n                // Instruct the editor go to full screen mode\n                ipcRenderer.on('showFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('"+this._editorInnerContainer+"');\n                  editorDiv.webkitRequestFullscreen();\n                });\n\n                // Instruct the editor exit full screen mode\n                ipcRenderer.on('exitFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('"+this._editorInnerContainer+"');\n                  editorDiv.webkitExitFullscreen();\n                });\n\n                ipcRenderer.on('dispose', function(){\n                  editor.dispose();\n                });\n\n                // need to manually resize the editor any time the window size\n                // changes. See: https://github.com/Microsoft/monaco-editor/issues/28\n                window.addEventListener(\"resize\", function resizeEditor() {\n                    editor.layout();\n                });\n            <\/script>\n            </body>\n            </html>",this._webview=document.createElement("webview"),this._webview.setAttribute("nodeintegration","true"),this._webview.setAttribute("disablewebsecurity","true"),this._webview.setAttribute("src","data:text/html;base64,"+window.btoa(t)),this._webview.setAttribute("style","display:inline-flex; width:100%; height:100%"),this._webview.addEventListener("ipc-message",function(t){"editorContent"===t.channel?(e._fromEditor=!0,e.writeValue(t.args[0]),e._subject.next(e._value),e._subject.complete(),e._subject=new rxjs.Subject):"onEditorContentChange"===t.channel?(e._fromEditor=!0,e.writeValue(t.args[0]),e.initialContentChange&&(e.initialContentChange=!1,e.layout())):"editorInitialized"===t.channel?(e._componentInitialized=!0,e._editorProxy=e.wrapEditorCalls(e._editor),e.editorInitialized.emit(e._editorProxy)):"editorConfigurationChanged"===t.channel?e.editorConfigurationChanged.emit():"editorLanguageChanged"===t.channel&&e.editorLanguageChanged.emit()}),this._editorContainer.nativeElement.appendChild(this._webview))},TdCodeEditorComponent.prototype.ngAfterViewInit=function(){var e=this;this._isElectronApp||(loadMonaco(),waitUntilMonacoReady().pipe(operators.takeUntil(this._destroy)).subscribe(function(){e.initMonaco()})),rxjs.merge(rxjs.fromEvent(window,"resize").pipe(operators.debounceTime(100)),this._widthSubject.asObservable().pipe(operators.distinctUntilChanged()),this._heightSubject.asObservable().pipe(operators.distinctUntilChanged())).pipe(operators.takeUntil(this._destroy),operators.debounceTime(100)).subscribe(function(){e.layout(),e._changeDetectorRef.markForCheck()}),rxjs.timer(500,250).pipe(operators.takeUntil(this._destroy)).subscribe(function(){e._elementRef&&e._elementRef.nativeElement&&(e._widthSubject.next(e._elementRef.nativeElement.getBoundingClientRect().width),e._heightSubject.next(e._elementRef.nativeElement.getBoundingClientRect().height))})},TdCodeEditorComponent.prototype.ngOnDestroy=function(){this._changeDetectorRef.detach(),this._webview?this._webview.send("dispose"):this._editor&&this._editor.dispose(),this._destroy.next(!0),this._destroy.unsubscribe()},TdCodeEditorComponent.prototype.showFullScreenEditor=function(){var e,t;if(this._componentInitialized)if(this._webview)this._webview.send("showFullScreenEditor");else{var n=this._editorContainer.nativeElement,o={requestFullscreen:function(){return n.requestFullscreen()},webkitRequestFullscreen:function(){return n.webkitRequestFullscreen()},msRequestFullscreen:function(){return n.msRequestFullscreen()},mozRequestFullScreen:function(){return n.mozRequestFullScreen()}};try{for(var i=__values(Object.keys(o)),r=i.next();!r.done;r=i.next()){var a=r.value;n[a]&&o[a]()}}catch(d){e={error:d}}finally{try{r&&!r.done&&(t=i["return"])&&t.call(i)}finally{if(e)throw e.error}}}this._isFullScreen=!0},TdCodeEditorComponent.prototype.exitFullScreenEditor=function(){var e,t;if(this._componentInitialized)if(this._webview)this._webview.send("exitFullScreenEditor");else{var n={exitFullscreen:function(){return document.exitFullscreen()},webkitExitFullscreen:function(){return document.webkitExitFullscreen()},mozCancelFullScreen:function(){return document.mozCancelFullScreen()},msExitFullscreen:function(){return document.msExitFullscreen()}};try{for(var o=__values(Object.keys(n)),i=o.next();!i.done;i=o.next()){var r=i.value;document[r]&&n[r]()}}catch(a){e={error:a}}finally{try{i&&!i.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}}this._isFullScreen=!1},TdCodeEditorComponent.prototype.addFullScreenModeCommand=function(){var e=this;this._editor.addAction({id:"fullScreen",label:"Full Screen",contextMenuGroupId:"navigation",keybindings:this._keycode,contextMenuOrder:1.5,run:function(t){e.showFullScreenEditor()}})},TdCodeEditorComponent.prototype.wrapEditorCalls=function(e){var t=this;return new Proxy(e,{get:function(e,n,o){var i=this;return function(){for(var o=[],r=0;r<arguments.length;r++)o[r]=arguments[r];return __awaiter(i,void 0,void 0,function(){var i;return __generator(this,function(r){switch(r.label){case 0:return t._componentInitialized?t._webview?[2,function(e){return new Promise(function(n){t._webview.executeJavaScript(e,n)})}("editor."+n+"("+o+")")]:[3,1]:[3,3];case 1:return[4,e[n].apply(t._editor,o)];case 2:return i=r.sent(),setTimeout(function(){t.zone.run(function(){t._changeDetectorRef.destroyed||t._changeDetectorRef.detectChanges()})}),[2,i];case 3:return[2]}})})}}})},TdCodeEditorComponent.prototype.initMonaco=function(){var e=this,t=this._editorContainer.nativeElement;t.id=this._editorInnerContainer,this._editor=monaco.editor.create(t,Object.assign({value:this._value,language:this.language,theme:this._theme},this.editorOptions)),setTimeout(function(){e._editorProxy=e.wrapEditorCalls(e._editor),e._componentInitialized=!0,e.editorInitialized.emit(e._editorProxy)}),this._editor.getModel().onDidChangeContent(function(t){e._fromEditor=!0,e.writeValue(e._editor.getValue()),e.initialContentChange&&(e.initialContentChange=!1,e.layout())}),this.addFullScreenModeCommand()},TdCodeEditorComponent.decorators=[{type:core.Component,args:[{selector:"td-code-editor",template:'<div class="editorContainer" #editorContainer></div>\n',providers:[{provide:forms.NG_VALUE_ACCESSOR,useExisting:core.forwardRef(function(){return TdCodeEditorComponent}),multi:!0}],styles:[":host{display:block;position:relative}:host .editorContainer{position:absolute;top:0;bottom:0;left:0;right:0}::ng-deep .monaco-aria-container{display:none}"]}]}],TdCodeEditorComponent.ctorParameters=function(){return[{type:core.NgZone},{type:core.ChangeDetectorRef},{type:core.ElementRef}]},TdCodeEditorComponent.propDecorators={_editorContainer:[{type:core.ViewChild,args:["editorContainer",{"static":!0}]}],automaticLayout:[{type:core.Input,args:["automaticLayout"]}],editorInitialized:[{type:core.Output}],editorConfigurationChanged:[{type:core.Output}],editorLanguageChanged:[{type:core.Output}],editorValueChange:[{type:core.Output}],change:[{type:core.Output}],value:[{type:core.Input,args:["value"]}],language:[{type:core.Input,args:["language"]}],editorStyle:[{type:core.Input,args:["editorStyle"]}],theme:[{type:core.Input,args:["theme"]}],fullScreenKeyBinding:[{type:core.Input,args:["fullScreenKeyBinding"]}],editorOptions:[{type:core.Input,args:["editorOptions"]}]},TdCodeEditorComponent}(),CovalentCodeEditorModule=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:core.NgModule,args:[{imports:[common.CommonModule],declarations:[TdCodeEditorComponent],exports:[TdCodeEditorComponent],entryComponents:[],bootstrap:[TdCodeEditorComponent]}]}],e}();exports.CovalentCodeEditorModule=CovalentCodeEditorModule,exports.TdCodeEditorComponent=TdCodeEditorComponent,exports.isMonacoLoaded=isMonacoLoaded,exports.loadMonaco=loadMonaco,exports.waitUntilMonacoReady=waitUntilMonacoReady,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=covalent-code-editor.umd.min.js.map