{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/code-editor/code-editor.utils.ts","ng://@covalent/code-editor/code-editor.component.ts","ng://@covalent/code-editor/code-editor.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","m","exports","__values","o","__read","ar","error","__spread","concat","__spreadArrays","il","k","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","waitUntilMonacoReady","monacoReady$","Subject","interval","setInterval","isMonacoLoaded","clearInterval","complete","asObservable","monaco","loadMonaco","document","getElementById","onGotAmdLoader","require","config","paths","vs","loaderScript","createElement","id","type","src","addEventListener","appendChild","noop","uniqueCounter","TdCodeEditorComponent","zone","_changeDetectorRef","_elementRef","_destroy","_widthSubject","_heightSubject","_editorStyle","_appPath","_isElectronApp","_value","_theme","_language","_subject","_editorInnerContainer","_editorNodeModuleDirOverride","_componentInitialized","_fromEditor","_editorOptions","_isFullScreen","initialContentChange","_registeredLanguagesStyles","editorInitialized","EventEmitter","editorConfigurationChanged","editorLanguageChanged","editorValueChange","change","propagateChange","onTouched","electron","remote","app","getAppPath","split","join","_this","_setValueTimeout","clearTimeout","_webview","undefined","send","emit","setTimeout","_editor","setValue","run","writeValue","registerOnChange","fn","registerOnTouched","getValue","language","currentValue","dispose","myDiv","_editorContainer","nativeElement","editor","theme","editorOptions","getModel","onDidChangeContent","registerLanguage","_c","completionItemProvider","_d","provider","kind","eval","_e","monarchTokensProvider","_f","monarchTokens","languages","register","setMonarchTokensProvider","tokenizer","root","defineTheme","customTheme","registerCompletionItemProvider","provideCompletionItems","css","innerHTML","monarchTokensProviderCSS","editorStyle","style","setAttribute","updateOptions","_keycode","keycode","layout","setEditorNodeModuleDirOverride","dirOverride","ngOnInit","editorHTML","JSON","stringify","window","btoa","event","channel","args","_editorProxy","wrapEditorCalls","ngAfterViewInit","pipe","takeUntil","subscribe","initMonaco","merge","fromEvent","debounceTime","distinctUntilChanged","markForCheck","timer","getBoundingClientRect","width","height","ngOnDestroy","detach","forEach","remove","unsubscribe","showFullScreenEditor","codeEditorElement_1","fullScreenMap","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","_b","keys","handler","exitFullScreenEditor","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","addFullScreenModeCommand","addAction","contextMenuGroupId","keybindings","contextMenuOrder","ed","obj","that","Proxy","get","propKey","receiver","_i","code","executeJavaScript","_a","detectChanges","containerDiv","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NgZone","ChangeDetectorRef","ElementRef","ViewChild","static","Output","Input","CovalentCodeEditorModule","NgModule","imports","CommonModule","declarations","bootstrap"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject, Observable } from 'rxjs';\n\n/**\n * Waits until monaco has been loaded so we can reference its global object.\n */\nexport function waitUntilMonacoReady(): Observable<void> {\n  const monacoReady$: Subject<void> = new Subject<void>();\n\n  // create interval to check if monaco has been loaded\n  const interval: any = setInterval(() => {\n    if (isMonacoLoaded()) {\n      // clear interval when monaco has been loaded\n      clearInterval(interval);\n      monacoReady$.next();\n      monacoReady$.complete();\n    }\n  }, 100);\n  return monacoReady$.asObservable();\n}\n\n/**\n * Check if monaco has been loaded\n */\nexport function isMonacoLoaded(): boolean {\n  return typeof (<any>window).monaco === 'object';\n}\n\n/**\n * Loads monaco\n */\nexport function loadMonaco(): void {\n  // check if the script tag has been created in case another code component has done this already\n  if (!document.getElementById('monaco-loader-script')) {\n    const onGotAmdLoader: () => void = () => {\n      // Load monaco\n      (<any>window).require.config({ paths: { vs: 'assets/monaco/vs' } });\n      (<any>window).require(['vs/editor/editor.main'], () => {\n        // TODO\n      });\n    };\n\n    // Load AMD loader if necessary\n    if (!(<any>window).require) {\n      const loaderScript: HTMLScriptElement = document.createElement('script');\n      loaderScript.id = 'monaco-loader-script';\n      loaderScript.type = 'text/javascript';\n      loaderScript.src = 'assets/monaco/vs/loader.js';\n      loaderScript.addEventListener('load', onGotAmdLoader);\n      document.body.appendChild(loaderScript);\n    } else {\n      onGotAmdLoader();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  forwardRef,\n  NgZone,\n  ChangeDetectorRef,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { fromEvent, merge, timer } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { waitUntilMonacoReady, loadMonaco } from './code-editor.utils';\n\nconst noop: any = () => {\n  // empty method\n};\n\n// counter for ids to allow for multiple editors on one page\nlet uniqueCounter: number = 0;\n// declare all the built in electron objects\ndeclare const electron: any;\ndeclare const monaco: any;\n\n@Component({\n  selector: 'td-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdCodeEditorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TdCodeEditorComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnDestroy {\n  private _destroy: Subject<boolean> = new Subject<boolean>();\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _heightSubject: Subject<number> = new Subject<number>();\n\n  private _editorStyle: string = 'width:100%;height:100%;border:1px solid grey;';\n  private _appPath: string = '';\n  private _isElectronApp: boolean = false;\n  private _webview: any;\n  private _value: string = '';\n  private _theme: string = 'vs';\n  private _language: string = 'javascript';\n  private _subject: Subject<string> = new Subject();\n  private _editorInnerContainer: string = 'editorInnerContainer' + uniqueCounter++;\n  private _editorNodeModuleDirOverride: string = '';\n  private _editor: any;\n  private _editorProxy: any;\n  private _componentInitialized: boolean = false;\n  private _fromEditor: boolean = false;\n  private _editorOptions: any = {};\n  private _isFullScreen: boolean = false;\n  private _keycode: any;\n  private _setValueTimeout: any;\n  private initialContentChange: boolean = true;\n  private _registeredLanguagesStyles: HTMLStyleElement[] = [];\n  @ViewChild('editorContainer', { static: true }) _editorContainer: ElementRef;\n\n  /**\n   * editorInitialized: function($event)\n   * Event emitted when editor is first initialized\n   */\n  @Output() editorInitialized: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorConfigurationChanged: function($event)\n   * Event emitted when editor's configuration changes\n   */\n  @Output() editorConfigurationChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorLanguageChanged: function($event)\n   * Event emitted when editor's Language changes\n   */\n  @Output() editorLanguageChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * editorValueChange: function($event)\n   * Event emitted any time something changes the editor value\n   */\n  @Output() editorValueChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * The change event notifies you about a change happening in an input field.\n   * Since the component is not a native Angular component have to specifiy the event emitter ourself\n   */\n  @Output() change: EventEmitter<void> = new EventEmitter<void>();\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * Set if using Electron mode when object is created\n   */\n  constructor(private zone: NgZone, private _changeDetectorRef: ChangeDetectorRef, private _elementRef: ElementRef) {\n    // since accessing the window object need this check so serverside rendering doesn't fail\n    if (typeof document === 'object' && !!document) {\n      /* tslint:disable-next-line */\n      this._isElectronApp = (<any>window)['process'] ? true : false;\n      if (this._isElectronApp) {\n        this._appPath = electron.remote.app\n          .getAppPath()\n          .split('\\\\')\n          .join('/');\n      }\n    }\n  }\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    // Clear any timeout that might overwrite this value set in the future\n    if (this._setValueTimeout) {\n      clearTimeout(this._setValueTimeout);\n    }\n    this._value = value;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        if (this._webview.send !== undefined) {\n          // don't want to keep sending content if event came from IPC, infinite loop\n          if (!this._fromEditor) {\n            this._webview.send('setEditorContent', value);\n          }\n          this.editorValueChange.emit();\n          this.propagateChange(this._value);\n          this.change.emit();\n          this._fromEditor = false;\n        } else {\n          // Editor is not loaded yet, try again in half a second\n          this._setValueTimeout = setTimeout(() => {\n            this.value = value;\n          }, 500);\n        }\n      } else {\n        if (this._editor && this._editor.setValue) {\n          // don't want to keep sending content if event came from the editor, infinite loop\n          if (!this._fromEditor) {\n            this._editor.setValue(value);\n          }\n          this.editorValueChange.emit();\n          this.propagateChange(this._value);\n          this.change.emit();\n          this._fromEditor = false;\n          this.zone.run(() => (this._value = value));\n        } else {\n          // Editor is not loaded yet, try again in half a second\n          this._setValueTimeout = setTimeout(() => {\n            this.value = value;\n          }, 500);\n        }\n      }\n    } else {\n      this._setValueTimeout = setTimeout(() => {\n        this.value = value;\n      }, 500);\n    }\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    // do not write if null or undefined\n    // tslint:disable-next-line\n    if (value != undefined) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * getEditorContent?: function\n   * Returns the content within the editor\n   */\n  getValue(): Observable<string> {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('getEditorContent');\n        return this._subject.asObservable();\n      } else if (this._editor) {\n        this._value = this._editor.getValue();\n        setTimeout(() => {\n          this._subject.next(this._value);\n          this._subject.complete();\n          this._subject = new Subject();\n          this.editorValueChange.emit();\n        });\n        return this._subject.asObservable();\n      }\n    }\n  }\n\n  /**\n   * language?: string\n   * language used in editor\n   */\n  @Input('language')\n  set language(language: string) {\n    this._language = language;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setLanguage', language);\n      } else if (this._editor) {\n        const currentValue: string = this._editor.getValue();\n        this._editor.dispose();\n        const myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        this._editor = monaco.editor.create(\n          myDiv,\n          Object.assign(\n            {\n              value: currentValue,\n              language,\n              theme: this._theme,\n            },\n            this.editorOptions,\n          ),\n        );\n        this._editor.getModel().onDidChangeContent((e: any) => {\n          this._fromEditor = true;\n          this.writeValue(this._editor.getValue());\n        });\n        this.editorConfigurationChanged.emit();\n        this.editorLanguageChanged.emit();\n      }\n    }\n  }\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * registerLanguage?: function\n   * Registers a custom Language within the editor\n   */\n  registerLanguage(language: any): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('registerLanguage', language);\n      } else if (this._editor) {\n        this._editor.dispose();\n\n        for (const provider of language.completionItemProvider) {\n          /* tslint:disable-next-line */\n          provider.kind = eval(provider.kind);\n        }\n        for (const monarchTokens of language.monarchTokensProvider) {\n          /* tslint:disable-next-line */\n          monarchTokens[0] = eval(monarchTokens[0]);\n        }\n        monaco.languages.register({ id: language.id });\n\n        monaco.languages.setMonarchTokensProvider(language.id, {\n          tokenizer: {\n            root: language.monarchTokensProvider,\n          },\n        });\n\n        // Define a new theme that constains only rules that match this language\n        monaco.editor.defineTheme(language.customTheme.id, language.customTheme.theme);\n        this._theme = language.customTheme.id;\n\n        monaco.languages.registerCompletionItemProvider(language.id, {\n          provideCompletionItems: () => {\n            return language.completionItemProvider;\n          },\n        });\n\n        const css: HTMLStyleElement = document.createElement('style');\n        css.type = 'text/css';\n        css.innerHTML = language.monarchTokensProviderCSS;\n        document.body.appendChild(css);\n        this.editorConfigurationChanged.emit();\n        this._registeredLanguagesStyles = [...this._registeredLanguagesStyles, css];\n      }\n    }\n  }\n\n  /**\n   * style?: string\n   * css style of the editor on the page\n   */\n  @Input('editorStyle')\n  set editorStyle(editorStyle: string) {\n    this._editorStyle = editorStyle;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorStyle', { language: this._language, theme: this._theme, style: editorStyle });\n      } else if (this._editor) {\n        const containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        containerDiv.setAttribute('style', editorStyle);\n        const currentValue: string = this._editor.getValue();\n        this._editor.dispose();\n        const myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n        this._editor = monaco.editor.create(\n          myDiv,\n          Object.assign(\n            {\n              value: currentValue,\n              language: this._language,\n              theme: this._theme,\n            },\n            this.editorOptions,\n          ),\n        );\n        this._editor.getModel().onDidChangeContent((e: any) => {\n          this._fromEditor = true;\n          this.writeValue(this._editor.getValue());\n        });\n      }\n    }\n  }\n  get editorStyle(): string {\n    return this._editorStyle;\n  }\n\n  /**\n   * theme?: string\n   * Theme to be applied to editor\n   */\n  @Input('theme')\n  set theme(theme: string) {\n    this._theme = theme;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorOptions', { theme });\n      } else if (this._editor) {\n        this._editor.updateOptions({ theme });\n        this.editorConfigurationChanged.emit();\n      }\n    }\n  }\n  get theme(): string {\n    return this._theme;\n  }\n\n  /**\n   * fullScreenKeyBinding?: number\n   * See here for key bindings https://microsoft.github.io/monaco-editor/api/enums/monaco.keycode.html\n   * Sets the KeyCode for shortcutting to Fullscreen mode\n   */\n  @Input('fullScreenKeyBinding')\n  set fullScreenKeyBinding(keycode: number[]) {\n    this._keycode = keycode;\n  }\n  get fullScreenKeyBinding(): number[] {\n    return this._keycode;\n  }\n\n  /**\n   * editorOptions?: object\n   * Options used on editor instantiation. Available options listed here:\n   * https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroptions.html\n   */\n  @Input('editorOptions')\n  set editorOptions(editorOptions: any) {\n    this._editorOptions = editorOptions;\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('setEditorOptions', editorOptions);\n      } else if (this._editor) {\n        this._editor.updateOptions(editorOptions);\n        this.editorConfigurationChanged.emit();\n      }\n    }\n  }\n  get editorOptions(): any {\n    return this._editorOptions;\n  }\n\n  /**\n   * layout method that calls layout method of editor and instructs the editor to remeasure its container\n   */\n  layout(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('layout');\n      } else if (this._editor) {\n        this._editor.layout();\n      }\n    }\n  }\n\n  /**\n   * Returns if in Electron mode or not\n   */\n  get isElectronApp(): boolean {\n    return this._isElectronApp;\n  }\n\n  /**\n   * Returns if in Full Screen Mode or not\n   */\n  get isFullScreen(): boolean {\n    return this._isFullScreen;\n  }\n\n  /**\n   * setEditorNodeModuleDirOverride function that overrides where to look\n   * for the editor node_module. Used in tests for Electron or anywhere that the\n   * node_modules are not in the expected location.\n   */\n  setEditorNodeModuleDirOverride(dirOverride: string): void {\n    this._editorNodeModuleDirOverride = dirOverride;\n    this._appPath = dirOverride;\n  }\n\n  /**\n   * ngOnInit only used for Electron version of editor\n   * This is where the webview is created to sandbox away the editor\n   */\n  ngOnInit(): void {\n    let editorHTML: string = '';\n    if (this._isElectronApp) {\n      editorHTML = `<!DOCTYPE html>\n            <html style=\"height:100%\">\n            <head>\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" >\n                <link rel=\"stylesheet\" data-name=\"vs/editor/editor.main\"\n                    href=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/editor/editor.main.css\">\n            </head>\n            <body style=\"height:100%;width: 100%;margin: 0;padding: 0;overflow: hidden;\">\n            <div id=\"${this._editorInnerContainer}\" style=\"width:100%;height:100%;${this._editorStyle}\"></div>\n            <script>\n                // Get the ipcRenderer of electron for communication\n                const {ipcRenderer} = require('electron');\n            </script>\n            <script src=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/loader.js\"></script>\n            <script>\n                var editor;\n                var theme = '${this._theme}';\n                var value = '${this._value}';\n                var registeredLanguagesStyles = [];\n\n                require.config({\n                    baseUrl: '${this._appPath}/assets/monaco'\n                });\n                self.module = undefined;\n                self.process.browser = true;\n\n                require(['vs/editor/editor.main'], function() {\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: value,\n                        language: '${this.language}',\n                        theme: '${this._theme}',\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    editor.getModel().onDidChangeContent( (e)=> {\n                        ipcRenderer.sendToHost(\"onEditorContentChange\", editor.getValue());\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'fullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [${this._keycode}],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        editorDiv.webkitRequestFullscreen();\n                      }\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'exitfullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Exit Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [9],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        document.webkitExitFullscreen();\n                      }\n                    });\n                    ipcRenderer.sendToHost(\"editorInitialized\", this._editor);\n                });\n\n                // return back the value in the editor to the mainview\n                ipcRenderer.on('getEditorContent', function(){\n                    ipcRenderer.sendToHost(\"editorContent\", editor.getValue());\n                });\n\n                // set the value of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorContent', function(event, data){\n                    value = data;\n                    editor.setValue(data);\n                });\n\n                // set the style of the editor container div\n                ipcRenderer.on('setEditorStyle', function(event, data){\n                    var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                    editorDiv.style = data.style;\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: currentValue,\n                        language: data.language,\n                        theme: data.theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                });\n\n                // set the options of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorOptions', function(event, data){\n                    editor.updateOptions(data);\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                });\n\n                // set the language of the editor from what was sent from the mainview\n                ipcRenderer.on('setLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${\n                      this._editorInnerContainer\n                    }'), Object.assign({\n                        value: currentValue,\n                        language: data,\n                        theme: theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                    ipcRenderer.sendToHost(\"editorLanguageChanged\", '');\n                });\n\n                // register a new language with editor\n                ipcRenderer.on('registerLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n\n                    for (var i = 0; i < data.completionItemProvider.length; i++) {\n                        var provider = data.completionItemProvider[i];\n                        provider.kind = eval(provider.kind);\n                    }\n                    for (var i = 0; i < data.monarchTokensProvider.length; i++) {\n                        var monarchTokens = data.monarchTokensProvider[i];\n                        monarchTokens[0] = eval(monarchTokens[0]);\n                    }\n                    monaco.languages.register({ id: data.id });\n\n                    monaco.languages.setMonarchTokensProvider(data.id, {\n                        tokenizer: {\n                            root: data.monarchTokensProvider\n                        }\n                    });\n\n                    // Define a new theme that constains only rules that match this language\n                    monaco.editor.defineTheme(data.customTheme.id, data.customTheme.theme);\n                    theme = data.customTheme.id;\n\n                    monaco.languages.registerCompletionItemProvider(data.id, {\n                        provideCompletionItems: () => {\n                            return data.completionItemProvider\n                        }\n                    });\n\n                    var css = document.createElement(\"style\");\n                    css.type = \"text/css\";\n                    css.innerHTML = data.monarchTokensProviderCSS;\n                    document.body.appendChild(css);\n                    registeredLanguagesStyles = [...registeredLanguagesStyles, css];\n\n\n                    ipcRenderer.sendToHost(\"editorConfigurationChanged\", '');\n                });\n\n                // Instruct the editor to remeasure its container\n                ipcRenderer.on('layout', function(){\n                    editor.layout();\n                });\n\n                // Instruct the editor go to full screen mode\n                ipcRenderer.on('showFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitRequestFullscreen();\n                });\n\n                // Instruct the editor exit full screen mode\n                ipcRenderer.on('exitFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitExitFullscreen();\n                });\n\n                ipcRenderer.on('dispose', function(){\n                  editor.dispose();\n                  registeredLanguagesStyles.forEach((style) => style.remove());\n                });\n\n                // need to manually resize the editor any time the window size\n                // changes. See: https://github.com/Microsoft/monaco-editor/issues/28\n                window.addEventListener(\"resize\", function resizeEditor() {\n                    editor.layout();\n                });\n            </script>\n            </body>\n            </html>`;\n\n      // dynamically create the Electron Webview Element\n      // this will sandbox the monaco code into its own DOM and its own\n      // javascript instance. Need to do this to avoid problems with monaco\n      // using AMD Requires and Electron using Node Requires\n      // see https://github.com/Microsoft/monaco-editor/issues/90\n      this._webview = document.createElement('webview');\n      this._webview.setAttribute('nodeintegration', 'true');\n      this._webview.setAttribute('disablewebsecurity', 'true');\n      // take the html content for the webview and base64 encode it and use as the src tag\n      this._webview.setAttribute('src', 'data:text/html;base64,' + window.btoa(editorHTML));\n      this._webview.setAttribute('style', 'display:inline-flex; width:100%; height:100%');\n      // to debug:\n      //  this._webview.addEventListener('dom-ready', () => {\n      //     this._webview.openDevTools();\n      //  });\n\n      // Process the data from the webview\n      this._webview.addEventListener('ipc-message', (event: any) => {\n        if (event.channel === 'editorContent') {\n          this._fromEditor = true;\n          this.writeValue(event.args[0]);\n          this._subject.next(this._value);\n          this._subject.complete();\n          this._subject = new Subject();\n        } else if (event.channel === 'onEditorContentChange') {\n          this._fromEditor = true;\n          this.writeValue(event.args[0]);\n          if (this.initialContentChange) {\n            this.initialContentChange = false;\n            this.layout();\n          }\n        } else if (event.channel === 'editorInitialized') {\n          this._componentInitialized = true;\n          this._editorProxy = this.wrapEditorCalls(this._editor);\n          this.editorInitialized.emit(this._editorProxy);\n        } else if (event.channel === 'editorConfigurationChanged') {\n          this.editorConfigurationChanged.emit();\n        } else if (event.channel === 'editorLanguageChanged') {\n          this.editorLanguageChanged.emit();\n        }\n      });\n\n      // append the webview to the DOM\n      this._editorContainer.nativeElement.appendChild(this._webview);\n    }\n  }\n\n  /**\n   * ngAfterViewInit only used for browser version of editor\n   * This is where the AMD Loader scripts are added to the browser and the editor scripts are \"required\"\n   */\n  ngAfterViewInit(): void {\n    if (!this._isElectronApp) {\n      loadMonaco();\n      waitUntilMonacoReady()\n        .pipe(takeUntil(this._destroy))\n        .subscribe(() => {\n          this.initMonaco();\n        });\n    }\n    merge(\n      fromEvent(window, 'resize').pipe(debounceTime(100)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._heightSubject.asObservable().pipe(distinctUntilChanged()),\n    )\n      .pipe(takeUntil(this._destroy), debounceTime(100))\n      .subscribe(() => {\n        this.layout();\n        this._changeDetectorRef.markForCheck();\n      });\n    timer(500, 250)\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        if (this._elementRef && this._elementRef.nativeElement) {\n          this._widthSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width);\n          this._heightSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height);\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._changeDetectorRef.detach();\n    this._registeredLanguagesStyles.forEach((style: HTMLStyleElement) => style.remove());\n    if (this._webview) {\n      this._webview.send('dispose');\n    } else if (this._editor) {\n      this._editor.dispose();\n    }\n    this._destroy.next(true);\n    this._destroy.unsubscribe();\n  }\n\n  /**\n   * showFullScreenEditor request for full screen of Code Editor based on its browser type.\n   */\n  public showFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('showFullScreenEditor');\n      } else {\n        const codeEditorElement: HTMLDivElement = this._editorContainer.nativeElement as HTMLDivElement;\n        const fullScreenMap: object = {\n          // Chrome\n          requestFullscreen: () => codeEditorElement.requestFullscreen(),\n          // Safari\n          webkitRequestFullscreen: () => (<any>codeEditorElement).webkitRequestFullscreen(),\n          // IE\n          msRequestFullscreen: () => (<any>codeEditorElement).msRequestFullscreen(),\n          // Firefox\n          mozRequestFullScreen: () => (<any>codeEditorElement).mozRequestFullScreen(),\n        };\n\n        for (const handler of Object.keys(fullScreenMap)) {\n          if (codeEditorElement[handler]) {\n            fullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = true;\n  }\n\n  /**\n   * exitFullScreenEditor request to exit full screen of Code Editor based on its browser type.\n   */\n  public exitFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('exitFullScreenEditor');\n      } else {\n        const exitFullScreenMap: object = {\n          // Chrome\n          exitFullscreen: () => document.exitFullscreen(),\n          // Safari\n          webkitExitFullscreen: () => (<any>document).webkitExitFullscreen(),\n          // Firefox\n          mozCancelFullScreen: () => (<any>document).mozCancelFullScreen(),\n          // IE\n          msExitFullscreen: () => (<any>document).msExitFullscreen(),\n        };\n\n        for (const handler of Object.keys(exitFullScreenMap)) {\n          if (document[handler]) {\n            exitFullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = false;\n  }\n\n  /**\n   * addFullScreenModeCommand used to add the fullscreen option to the context menu\n   */\n  private addFullScreenModeCommand(): void {\n    this._editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'fullScreen',\n      // A label of the action that will be presented to the user.\n      label: 'Full Screen',\n      // An optional array of keybindings for the action.\n      contextMenuGroupId: 'navigation',\n      keybindings: this._keycode,\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed: any) => {\n        this.showFullScreenEditor();\n      },\n    });\n  }\n\n  /**\n   * wrapEditorCalls used to proxy all the calls to the monaco editor\n   * For calls for Electron use this to call the editor inside the webview\n   */\n  private wrapEditorCalls(obj: any): any {\n    const that: any = this;\n    const handler: any = {\n      get(target: any, propKey: any, receiver: any): any {\n        return async (...args: any): Promise<any> => {\n          if (that._componentInitialized) {\n            if (that._webview) {\n              const executeJavaScript: (code: string) => Promise<any> = (code: string) =>\n                new Promise((resolve: any) => {\n                  that._webview.executeJavaScript(code, resolve);\n                });\n              return executeJavaScript('editor.' + propKey + '(' + args + ')');\n            } else {\n              const origMethod: any = target[propKey];\n              const result: any = await origMethod.apply(that._editor, args);\n              // since running javascript code manually need to force Angular to detect changes\n              setTimeout(() => {\n                that.zone.run(() => {\n                  // tslint:disable-next-line\n                  if (!that._changeDetectorRef['destroyed']) {\n                    that._changeDetectorRef.detectChanges();\n                  }\n                });\n              });\n              return result;\n            }\n          }\n        };\n      },\n    };\n    return new Proxy(obj, handler);\n  }\n\n  /**\n   * initMonaco method creates the monaco editor into the @ViewChild('editorContainer')\n   * and emit the editorInitialized event.  This is only used in the browser version.\n   */\n  private initMonaco(): void {\n    const containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n    containerDiv.id = this._editorInnerContainer;\n    this._editor = monaco.editor.create(\n      containerDiv,\n      Object.assign(\n        {\n          value: this._value,\n          language: this.language,\n          theme: this._theme,\n        },\n        this.editorOptions,\n      ),\n    );\n    setTimeout(() => {\n      this._editorProxy = this.wrapEditorCalls(this._editor);\n      this._componentInitialized = true;\n      this.editorInitialized.emit(this._editorProxy);\n    });\n    this._editor.getModel().onDidChangeContent((e: any) => {\n      this._fromEditor = true;\n      this.writeValue(this._editor.getValue());\n      if (this.initialContentChange) {\n        this.initialContentChange = false;\n        this.layout();\n      }\n    });\n    this.addFullScreenModeCommand();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdCodeEditorComponent } from './code-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TdCodeEditorComponent],\n  exports: [TdCodeEditorComponent],\n  bootstrap: [TdCodeEditorComponent],\n})\nexport class CovalentCodeEditorModule {}\n"]}