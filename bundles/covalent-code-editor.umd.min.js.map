{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@covalent/code-editor/code-editor.utils.ts","ng://@covalent/code-editor/code-editor.component.ts","ng://@covalent/code-editor/code-editor.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__values","o","m","i","waitUntilMonacoReady","monacoReady$","Subject","interval","setInterval","isMonacoLoaded","clearInterval","complete","asObservable","loadMonaco","document","getElementById","onGotAmdLoader","require","config","paths","vs","loaderScript","createElement","id","type","src","addEventListener","appendChild","noop","uniqueCounter","TdCodeEditorComponent","zone","_changeDetectorRef","_elementRef","_destroy","_widthSubject","_heightSubject","_editorStyle","_appPath","_isElectronApp","_value","_theme","_language","_subject","_editorInnerContainer","_editorNodeModuleDirOverride","_componentInitialized","_fromEditor","_editorOptions","_isFullScreen","initialContentChange","onEditorInitialized","EventEmitter","onEditorConfigurationChanged","onEditorLanguageChanged","onEditorValueChange","onChange","propagateChange","onTouched","electron","remote","app","getAppPath","split","join","Object","defineProperty","prototype","automaticLayout","console","warn","_this","_setValueTimeout","clearTimeout","_webview","send","undefined","emit","setTimeout","_editor","setValue","run","writeValue","registerOnChange","fn","registerOnTouched","getValue","language","currentValue","dispose","myDiv","_editorContainer","nativeElement","monaco","editor","create","assign","theme","editorOptions","getModel","onDidChangeContent","registerLanguage","completionItemProvider","provider","kind","eval","monarchTokensProvider","monarchTokens","languages","register","setMonarchTokensProvider","tokenizer","root","defineTheme","customTheme","registerCompletionItemProvider","provideCompletionItems","css","innerHTML","monarchTokensProviderCSS","editorStyle","style","setAttribute","updateOptions","_keycode","keycode","layout","setEditorNodeModuleDirOverride","dirOverride","ngOnInit","editorHTML","JSON","stringify","window","btoa","event","channel","args","_editorProxy","wrapEditorCalls","ngAfterViewInit","pipe","takeUntil","subscribe","initMonaco","merge","fromEvent","debounceTime","distinctUntilChanged","markForCheck","timer","getBoundingClientRect","width","height","ngOnDestroy","detach","unsubscribe","showFullScreenEditor","codeEditorElement_1","fullScreenMap","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","_b","tslib_1.__values","keys","_c","handler","exitFullScreenEditor","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","addFullScreenModeCommand","addAction","contextMenuGroupId","keybindings","contextMenuOrder","ed","obj","that","Proxy","get","target","propKey","receiver","_i","arguments","code","executeJavaScript","_a","detectChanges","containerDiv","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NgZone","ChangeDetectorRef","ElementRef","ViewChild","Input","Output","CovalentCodeEditorModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","exports","entryComponents","bootstrap"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject, Observable } from 'rxjs';\n\n/**\n * Waits until monaco has been loaded so we can reference its global object.\n */\nexport function waitUntilMonacoReady(): Observable<void> {\n  let monacoReady$: Subject<void> = new Subject<void>();\n\n  // create interval to check if monaco has been loaded\n  let interval: any = setInterval(() => {\n    if (isMonacoLoaded()) {\n      // clear interval when monaco has been loaded\n      clearInterval(interval);\n      monacoReady$.next();\n      monacoReady$.complete();\n    }\n  }, 100);\n  return monacoReady$.asObservable();\n}\n\n/**\n * Check if monaco has been loaded\n */\nexport function isMonacoLoaded(): boolean {\n  return typeof((<any>window).monaco) === 'object';\n}\n\n/**\n * Loads monaco\n */\nexport function loadMonaco(): void {\n  // check if the script tag has been created in case another code component has done this already\n  if (!document.getElementById('monaco-loader-script')) {\n    const onGotAmdLoader: () => void = () => {\n      // Load monaco\n      (<any>window).require.config({ paths: { 'vs': 'assets/monaco/vs' } });\n      (<any>window).require(['vs/editor/editor.main'], () => {\n        // TODO\n      });\n    };\n\n    // Load AMD loader if necessary\n    if (!(<any>window).require) {\n      const loaderScript: HTMLScriptElement = document.createElement('script');\n      loaderScript.id = 'monaco-loader-script';\n      loaderScript.type = 'text/javascript';\n      loaderScript.src = 'assets/monaco/vs/loader.js';\n      loaderScript.addEventListener('load', onGotAmdLoader);\n      document.body.appendChild(loaderScript);\n    } else {\n      onGotAmdLoader();\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit,\n  ViewChild, ElementRef, forwardRef, NgZone, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { fromEvent, merge, timer } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { waitUntilMonacoReady, loadMonaco } from './code-editor.utils';\n\nconst noop: any = () => {\n  // empty method\n};\n\n// counter for ids to allow for multiple editors on one page\nlet uniqueCounter: number = 0;\n// declare all the built in electron objects\ndeclare const electron: any;\ndeclare const monaco: any;\n\n@Component({\n  selector: 'td-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: [ './code-editor.component.scss' ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdCodeEditorComponent),\n    multi: true,\n  }],\n})\nexport class TdCodeEditorComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnDestroy {\n\n  private _destroy: Subject<boolean> = new Subject<boolean>();\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _heightSubject: Subject<number> = new Subject<number>();\n\n  private _editorStyle: string = 'width:100%;height:100%;border:1px solid grey;';\n  private _appPath: string = '';\n  private _isElectronApp: boolean = false;\n  private _webview: any;\n  private _value: string = '';\n  private _theme: string = 'vs';\n  private _language: string = 'javascript';\n  private _subject: Subject<string> = new Subject();\n  private _editorInnerContainer: string = 'editorInnerContainer' + uniqueCounter++;\n  private _editorNodeModuleDirOverride: string = '';\n  private _editor: any;\n  private _editorProxy: any;\n  private _componentInitialized: boolean = false;\n  private _fromEditor: boolean = false;\n  private _editorOptions: any = {};\n  private _isFullScreen: boolean = false;\n  private _keycode: any;\n  private _setValueTimeout: any;\n  private initialContentChange: boolean = true;\n\n  @ViewChild('editorContainer') _editorContainer: ElementRef;\n\n  /**\n   * automaticLayout?: boolean\n   * @deprecated in favor of our own resize implementation.\n   */\n  @Input('automaticLayout')\n  set automaticLayout(automaticLayout: boolean) {\n    // tslint:disable-next-line\n    console.warn('[automaticLayout] has been deprecated in favor of our own resize implementation and will be removed on 3.0.0');\n  }\n\n /**\n  * editorInitialized: function($event)\n  * Event emitted when editor is first initialized\n  */\n  @Output('editorInitialized') onEditorInitialized: EventEmitter<void> = new EventEmitter<void>();\n\n /**\n  * editorConfigurationChanged: function($event)\n  * Event emitted when editor's configuration changes\n  */\n  @Output('editorConfigurationChanged') onEditorConfigurationChanged: EventEmitter<void> = new EventEmitter<void>();\n\n /**\n  * editorLanguageChanged: function($event)\n  * Event emitted when editor's Language changes\n  */\n  @Output('editorLanguageChanged') onEditorLanguageChanged: EventEmitter<void> = new EventEmitter<void>();\n\n /**\n  * editorValueChange: function($event)\n  * Event emitted any time something changes the editor value\n  */\n  @Output('editorValueChange') onEditorValueChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * The change event notifies you about a change happening in an input field.\n   * Since the component is not a native Angular component have to specifiy the event emitter ourself\n   */\n  @Output('change') onChange: EventEmitter<void> = new EventEmitter<void>();\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * Set if using Electron mode when object is created\n   */\n  constructor(\n    private zone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n  ) {\n    // since accessing the window object need this check so serverside rendering doesn't fail\n    if (typeof document === 'object' && !!document) {\n        /* tslint:disable-next-line */\n        this._isElectronApp = ((<any>window)['process']) ? true : false;\n        if (this._isElectronApp) {\n            this._appPath = electron.remote.app.getAppPath().split('\\\\').join('/');\n        }\n    }\n  }\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    // Clear any timeout that might overwrite this value set in the future\n    if (this._setValueTimeout) {\n        clearTimeout(this._setValueTimeout);\n    }\n    this._value = value;\n    if (this._componentInitialized) {\n        if (this._webview) {\n            if (this._webview.send !== undefined) {\n                // don't want to keep sending content if event came from IPC, infinite loop\n                if (!this._fromEditor) {\n                    this._webview.send('setEditorContent', value);\n                }\n                this.onEditorValueChange.emit(undefined);\n                this.propagateChange(this._value);\n                this.onChange.emit(undefined);\n                this._fromEditor = false;\n            } else {\n                // Editor is not loaded yet, try again in half a second\n                this._setValueTimeout = setTimeout(() => {\n                    this.value = value;\n                }, 500);\n            }\n        } else {\n            if (this._editor && this._editor.setValue) {\n                // don't want to keep sending content if event came from the editor, infinite loop\n                if (!this._fromEditor) {\n                    this._editor.setValue(value);\n                }\n                this.onEditorValueChange.emit(undefined);\n                this.propagateChange(this._value);\n                this.onChange.emit(undefined);\n                this._fromEditor = false;\n                this.zone.run(() => this._value = value);\n            } else {\n              // Editor is not loaded yet, try again in half a second\n              this._setValueTimeout = setTimeout(() => {\n                this.value = value;\n              }, 500);\n            }\n        }\n    } else {\n        this._setValueTimeout = setTimeout(() => {\n            this.value = value;\n        }, 500);\n    }\n  }\n\n  get value(): string {\n      return this._value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    // do not write if null or undefined\n    // tslint:disable-next-line\n    if ( value != undefined) {\n      this.value = value;\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * getEditorContent?: function\n   * Returns the content within the editor\n   */\n  getValue(): Observable<string> {\n      if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('getEditorContent');\n            return this._subject.asObservable();\n        } else if (this._editor) {\n            this._value = this._editor.getValue();\n            setTimeout(() => {\n                this._subject.next(this._value);\n                this._subject.complete();\n                this._subject = new Subject();\n                this.onEditorValueChange.emit(undefined);\n            });\n            return this._subject.asObservable();\n        }\n      }\n  }\n\n  /**\n   * language?: string\n   * language used in editor\n   */\n  @Input('language')\n  set language(language: string) {\n    this._language = language;\n    if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('setLanguage', language);\n        } else if (this._editor) {\n            let currentValue: string = this._editor.getValue();\n            this._editor.dispose();\n            let myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n            this._editor = monaco.editor.create(myDiv, Object.assign({\n                value: currentValue,\n                language: language,\n                theme: this._theme,\n            }, this.editorOptions));\n            this._editor.getModel().onDidChangeContent( (e: any) => {\n                this._fromEditor = true;\n                this.writeValue(this._editor.getValue());\n            });\n            this.onEditorConfigurationChanged.emit(undefined);\n            this.onEditorLanguageChanged.emit(undefined);\n        }\n    }\n  }\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * registerLanguage?: function\n   * Registers a custom Language within the editor\n   */\n  registerLanguage(language: any): void {\n      if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('registerLanguage', language);\n        } else if (this._editor) {\n            let currentValue: string = this._editor.getValue();\n            this._editor.dispose();\n\n            for (let i: number = 0; i < language.completionItemProvider.length; i++) {\n                let provider: any = language.completionItemProvider[i];\n                /* tslint:disable-next-line */\n                provider.kind = eval(provider.kind);\n            }\n            for (let i: number = 0; i < language.monarchTokensProvider.length; i++) {\n                let monarchTokens: any = language.monarchTokensProvider[i];\n                /* tslint:disable-next-line */\n                monarchTokens[0] = eval(monarchTokens[0]);\n            }\n            monaco.languages.register({ id: language.id });\n\n            monaco.languages.setMonarchTokensProvider(language.id, {\n                tokenizer: {\n                    root: language.monarchTokensProvider,\n                },\n            });\n\n            // Define a new theme that constains only rules that match this language\n            monaco.editor.defineTheme(language.customTheme.id, language.customTheme.theme);\n            this._theme = language.customTheme.id;\n\n            monaco.languages.registerCompletionItemProvider(language.id, {\n                provideCompletionItems: () => {\n                    return language.completionItemProvider;\n                },\n            });\n\n            let css: HTMLStyleElement = document.createElement('style');\n            css.type = 'text/css';\n            css.innerHTML = language.monarchTokensProviderCSS;\n            document.body.appendChild(css);\n            this.onEditorConfigurationChanged.emit(undefined);\n        }\n      }\n  }\n\n  /**\n   * style?: string\n   * css style of the editor on the page\n   */\n  @Input('editorStyle')\n  set editorStyle(editorStyle: string) {\n    this._editorStyle = editorStyle;\n    if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('setEditorStyle', {language: this._language, theme: this._theme, style: editorStyle});\n        } else if (this._editor) {\n            let containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n            containerDiv.setAttribute('style', editorStyle);\n            let currentValue: string = this._editor.getValue();\n            this._editor.dispose();\n            let myDiv: HTMLDivElement = this._editorContainer.nativeElement;\n            this._editor = monaco.editor.create(myDiv, Object.assign({\n                value: currentValue,\n                language: this._language,\n                theme: this._theme,\n            }, this.editorOptions));\n            this._editor.getModel().onDidChangeContent( (e: any) => {\n                this._fromEditor = true;\n                this.writeValue(this._editor.getValue());\n            });\n        }\n    }\n  }\n  get editorStyle(): string {\n    return this._editorStyle;\n  }\n\n  /**\n   * theme?: string\n   * Theme to be applied to editor\n   */\n  @Input('theme')\n  set theme(theme: string) {\n    this._theme = theme;\n    if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('setEditorOptions', {'theme': theme});\n        } else if (this._editor) {\n            this._editor.updateOptions({'theme': theme});\n            this.onEditorConfigurationChanged.emit(undefined);\n        }\n    }\n  }\n  get theme(): string {\n    return this._theme;\n  }\n\n  /**\n   * fullScreenKeyBinding?: number\n   * See here for key bindings https://microsoft.github.io/monaco-editor/api/enums/monaco.keycode.html\n   * Sets the KeyCode for shortcutting to Fullscreen mode\n   */\n  @Input('fullScreenKeyBinding')\n  set fullScreenKeyBinding(keycode: number[]) {\n    this._keycode = keycode;\n  }\n  get fullScreenKeyBinding(): number[] {\n    return this._keycode;\n  }\n\n  /**\n   * editorOptions?: Object\n   * Options used on editor instantiation. Available options listed here:\n   * https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroptions.html\n   */\n  @Input('editorOptions')\n  set editorOptions(editorOptions: any) {\n      this._editorOptions = editorOptions;\n      if (this._componentInitialized) {\n        if (this._webview) {\n          this._webview.send('setEditorOptions', editorOptions);\n        } else if (this._editor) {\n          this._editor.updateOptions(editorOptions);\n          this.onEditorConfigurationChanged.emit(undefined);\n        }\n      }\n  }\n  get editorOptions(): any {\n    return this._editorOptions;\n  }\n\n  /**\n   * layout method that calls layout method of editor and instructs the editor to remeasure its container\n   */\n   layout(): void {\n    if (this._componentInitialized) {\n        if (this._webview) {\n            this._webview.send('layout');\n        } else if (this._editor) {\n            this._editor.layout();\n        }\n    }\n  }\n\n  /**\n   * Returns if in Electron mode or not\n   */\n  get isElectronApp(): boolean {\n    return this._isElectronApp;\n  }\n\n  /**\n   * Returns if in Full Screen Mode or not\n   */\n  get isFullScreen(): boolean {\n    return this._isFullScreen;\n  }\n\n/**\n * setEditorNodeModuleDirOverride function that overrides where to look\n * for the editor node_module. Used in tests for Electron or anywhere that the\n * node_modules are not in the expected location.\n */\n  setEditorNodeModuleDirOverride(dirOverride: string): void {\n      this._editorNodeModuleDirOverride = dirOverride;\n      this._appPath = dirOverride;\n  }\n\n  /**\n   * ngOnInit only used for Electron version of editor\n   * This is where the webview is created to sandbox away the editor\n   */\n  ngOnInit(): void {\n    let editorHTML: string = '';\n    if (this._isElectronApp) {\n        editorHTML = `<!DOCTYPE html>\n            <html style=\"height:100%\">\n            <head>\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" >\n                <link rel=\"stylesheet\" data-name=\"vs/editor/editor.main\"\n                    href=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/editor/editor.main.css\">\n            </head>\n            <body style=\"height:100%;width: 100%;margin: 0;padding: 0;overflow: hidden;\">\n            <div id=\"${this._editorInnerContainer}\" style=\"width:100%;height:100%;${this._editorStyle}\"></div>\n            <script>\n                // Get the ipcRenderer of electron for communication\n                const {ipcRenderer} = require('electron');\n            </script>\n            <script src=\"file://${this._editorNodeModuleDirOverride}/assets/monaco/vs/loader.js\"></script>\n            <script>\n                var editor;\n                var theme = '${this._theme}';\n                var value = '${this._value}';\n\n                require.config({\n                    baseUrl: '${this._appPath}/assets/monaco'\n                });\n                self.module = undefined;\n                self.process.browser = true;\n\n                require(['vs/editor/editor.main'], function() {\n                    editor = monaco.editor.create(document.getElementById('${this._editorInnerContainer}'), Object.assign({\n                        value: value,\n                        language: '${this.language}',\n                        theme: '${this._theme}',\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    editor.getModel().onDidChangeContent( (e)=> {\n                        ipcRenderer.sendToHost(\"onEditorContentChange\", editor.getValue());\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'fullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [${this._keycode}],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        editorDiv.webkitRequestFullscreen();\n                      }\n                    });\n                    editor.addAction({\n                      // An unique identifier of the contributed action.\n                      id: 'exitfullScreen',\n                      // A label of the action that will be presented to the user.\n                      label: 'Exit Full Screen',\n                      // An optional array of keybindings for the action.\n                      contextMenuGroupId: 'navigation',\n                      keybindings: [9],\n                      contextMenuOrder: 1.5,\n                      // Method that will be executed when the action is triggered.\n                      // @param editor The editor instance is passed in as a convinience\n                      run: function(ed) {\n                        var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                        document.webkitExitFullscreen();\n                      }\n                    });\n                    ipcRenderer.sendToHost(\"onEditorInitialized\", this._editor);\n                });\n\n                // return back the value in the editor to the mainview\n                ipcRenderer.on('getEditorContent', function(){\n                    ipcRenderer.sendToHost(\"editorContent\", editor.getValue());\n                });\n\n                // set the value of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorContent', function(event, data){\n                    value = data;\n                    editor.setValue(data);\n                });\n\n                // set the style of the editor container div\n                ipcRenderer.on('setEditorStyle', function(event, data){\n                    var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                    editorDiv.style = data.style;\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${this._editorInnerContainer}'), Object.assign({\n                        value: currentValue,\n                        language: data.language,\n                        theme: data.theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                });\n\n                // set the options of the editor from what was sent from the mainview\n                ipcRenderer.on('setEditorOptions', function(event, data){\n                    editor.updateOptions(data);\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                });\n\n                // set the language of the editor from what was sent from the mainview\n                ipcRenderer.on('setLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n                    editor = monaco.editor.create(document.getElementById('${this._editorInnerContainer}'), Object.assign({\n                        value: currentValue,\n                        language: data,\n                        theme: theme,\n                    }, ${JSON.stringify(this.editorOptions)}));\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                    ipcRenderer.sendToHost(\"onEditorLanguageChanged\", '');\n                });\n\n                // register a new language with editor\n                ipcRenderer.on('registerLanguage', function(event, data){\n                    var currentValue = editor.getValue();\n                    editor.dispose();\n\n                    for (var i = 0; i < data.completionItemProvider.length; i++) {\n                        var provider = data.completionItemProvider[i];\n                        provider.kind = eval(provider.kind);\n                    }\n                    for (var i = 0; i < data.monarchTokensProvider.length; i++) {\n                        var monarchTokens = data.monarchTokensProvider[i];\n                        monarchTokens[0] = eval(monarchTokens[0]);\n                    }\n                    monaco.languages.register({ id: data.id });\n\n                    monaco.languages.setMonarchTokensProvider(data.id, {\n                        tokenizer: {\n                            root: data.monarchTokensProvider\n                        }\n                    });\n\n                    // Define a new theme that constains only rules that match this language\n                    monaco.editor.defineTheme(data.customTheme.id, data.customTheme.theme);\n                    theme = data.customTheme.id;\n\n                    monaco.languages.registerCompletionItemProvider(data.id, {\n                        provideCompletionItems: () => {\n                            return data.completionItemProvider\n                        }\n                    });\n\n                    var css = document.createElement(\"style\");\n                    css.type = \"text/css\";\n                    css.innerHTML = data.monarchTokensProviderCSS;\n                    document.body.appendChild(css);\n\n                    ipcRenderer.sendToHost(\"onEditorConfigurationChanged\", '');\n                });\n\n                // Instruct the editor to remeasure its container\n                ipcRenderer.on('layout', function(){\n                    editor.layout();\n                });\n\n                // Instruct the editor go to full screen mode\n                ipcRenderer.on('showFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitRequestFullscreen();\n                });\n\n                // Instruct the editor exit full screen mode\n                ipcRenderer.on('exitFullScreenEditor', function() {\n                  var editorDiv = document.getElementById('${this._editorInnerContainer}');\n                  editorDiv.webkitExitFullscreen();\n                });\n\n                ipcRenderer.on('dispose', function(){\n                  editor.dispose();\n                });\n\n                // need to manually resize the editor any time the window size\n                // changes. See: https://github.com/Microsoft/monaco-editor/issues/28\n                window.addEventListener(\"resize\", function resizeEditor() {\n                    editor.layout();\n                });\n            </script>\n            </body>\n            </html>`;\n\n        // dynamically create the Electron Webview Element\n        // this will sandbox the monaco code into its own DOM and its own\n        // javascript instance. Need to do this to avoid problems with monaco\n        // using AMD Requires and Electron using Node Requires\n        // see https://github.com/Microsoft/monaco-editor/issues/90\n        this._webview = document.createElement('webview');\n        this._webview.setAttribute('nodeintegration', 'true');\n        this._webview.setAttribute('disablewebsecurity', 'true');\n        // take the html content for the webview and base64 encode it and use as the src tag\n        this._webview.setAttribute('src', 'data:text/html;base64,' + window.btoa(editorHTML));\n        this._webview.setAttribute('style', 'display:inline-flex; width:100%; height:100%');\n        //  this._webview.addEventListener('dom-ready', () => {\n        //     this._webview.openDevTools();\n        //  });\n\n        // Process the data from the webview\n        this._webview.addEventListener('ipc-message', (event: any) => {\n            if (event.channel === 'editorContent') {\n              this._fromEditor = true;\n              this.writeValue(event.args[0]);\n              this._subject.next(this._value);\n              this._subject.complete();\n              this._subject = new Subject();\n            } else if (event.channel === 'onEditorContentChange') {\n              this._fromEditor = true;\n              this.writeValue(event.args[0]);\n              if (this.initialContentChange) {\n                this.initialContentChange = false;\n                this.layout();\n            }\n            } else if (event.channel === 'onEditorInitialized') {\n              this._componentInitialized = true;\n              this._editorProxy = this.wrapEditorCalls(this._editor);\n              this.onEditorInitialized.emit(this._editorProxy);\n            } else if (event.channel === 'onEditorConfigurationChanged') {\n              this.onEditorConfigurationChanged.emit(undefined);\n            } else if (event.channel === 'onEditorLanguageChanged') {\n              this.onEditorLanguageChanged.emit(undefined);\n            }\n        });\n\n        // append the webview to the DOM\n        this._editorContainer.nativeElement.appendChild(this._webview);\n    }\n  }\n\n  /**\n   * ngAfterViewInit only used for browser version of editor\n   * This is where the AMD Loader scripts are added to the browser and the editor scripts are \"required\"\n   */\n  ngAfterViewInit(): void {\n    if (!this._isElectronApp) {\n      loadMonaco();\n      waitUntilMonacoReady().pipe(\n        takeUntil(this._destroy),\n      ).subscribe(() => {\n        this.initMonaco();\n      });\n    }\n    merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(100),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n      this._heightSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).pipe(\n      takeUntil(this._destroy),\n      debounceTime(100),\n    ).subscribe(() => {\n      this.layout();\n      this._changeDetectorRef.markForCheck();\n    });\n    timer(500, 250).pipe(\n      takeUntil(this._destroy),\n    ).subscribe(() => {\n      if (this._elementRef && this._elementRef.nativeElement) {\n        this._widthSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width);\n        this._heightSubject.next((<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._changeDetectorRef.detach();\n    if (this._webview) {\n      this._webview.send('dispose');\n    } else if (this._editor) {\n      this._editor.dispose();\n    }\n    this._destroy.next(true);\n    this._destroy.unsubscribe();\n  }\n\n /**\n  * showFullScreenEditor request for full screen of Code Editor based on its browser type.\n  */\n  public showFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('showFullScreenEditor');\n      } else {\n        const codeEditorElement: HTMLDivElement = this._editorContainer.nativeElement as HTMLDivElement;\n        const fullScreenMap: Object = {\n          // Chrome\n          'requestFullscreen': () => codeEditorElement.requestFullscreen(),\n          // Safari\n          'webkitRequestFullscreen': () => (<any>codeEditorElement).webkitRequestFullscreen(),\n          // IE\n          'msRequestFullscreen': () => (<any>codeEditorElement).msRequestFullscreen(),\n          // Firefox\n          'mozRequestFullScreen': () => (<any>codeEditorElement).mozRequestFullScreen(),\n        };\n\n        for (const handler of Object.keys(fullScreenMap)) {\n          if (codeEditorElement[handler]) {\n              fullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = true;\n  }\n\n  /**\n   * exitFullScreenEditor request to exit full screen of Code Editor based on its browser type.\n   */\n  public exitFullScreenEditor(): void {\n    if (this._componentInitialized) {\n      if (this._webview) {\n        this._webview.send('exitFullScreenEditor');\n      } else {\n        const exitFullScreenMap: object = {\n          // Chrome\n          'exitFullscreen': () => document.exitFullscreen(),\n          // Safari\n          'webkitExitFullscreen': () => (<any>document).webkitExitFullscreen(),\n          // Firefox\n          'mozCancelFullScreen': () => (<any>document).mozCancelFullScreen(),\n          // IE\n          'msExitFullscreen': () => (<any>document).msExitFullscreen(),\n        };\n\n        for (const handler of Object.keys(exitFullScreenMap)) {\n          if (document[handler]) {\n              exitFullScreenMap[handler]();\n          }\n        }\n      }\n    }\n    this._isFullScreen = false;\n  }\n\n  /**\n   * addFullScreenModeCommand used to add the fullscreen option to the context menu\n   */\n  private addFullScreenModeCommand(): void {\n    this._editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'fullScreen',\n      // A label of the action that will be presented to the user.\n      label: 'Full Screen',\n      // An optional array of keybindings for the action.\n      contextMenuGroupId: 'navigation',\n      keybindings: this._keycode,\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed: any) => {\n        this.showFullScreenEditor();\n      },\n    });\n  }\n\n  /**\n   * wrapEditorCalls used to proxy all the calls to the monaco editor\n   * For calls for Electron use this to call the editor inside the webview\n   */\n  private wrapEditorCalls(obj: any): any {\n    let that: any = this;\n    let handler: any = {\n      get(target: any, propKey: any, receiver: any): any {\n        return async (...args: any): Promise<any> => {\n          if (that._componentInitialized) {\n            if (that._webview) {\n              const executeJavaScript: Function = (code: string) =>\n                new Promise((resolve: any) => {\n                  that._webview.executeJavaScript(code, resolve);\n                });\n              let result: any = await executeJavaScript('editor.' + propKey + '(' + args + ')');\n              return result;\n            } else {\n              const origMethod: any = target[propKey];\n              let result: any = await origMethod.apply(that._editor, args);\n              // since running javascript code manually need to force Angular to detect changes\n              setTimeout(() => {\n                that.zone.run(() => {\n                    // tslint:disable-next-line\n                    if (!that._changeDetectorRef['destroyed']) {\n                        that._changeDetectorRef.detectChanges();\n                    }\n                });\n              });\n              return result;\n            }\n          }\n        };\n      },\n    };\n    return new Proxy(obj, handler);\n  }\n\n  /**\n   * initMonaco method creates the monaco editor into the @ViewChild('editorContainer')\n   * and emit the onEditorInitialized event.  This is only used in the browser version.\n   */\n  private initMonaco(): void {\n    let containerDiv: HTMLDivElement = this._editorContainer.nativeElement;\n    containerDiv.id = this._editorInnerContainer;\n    this._editor = monaco.editor.create(containerDiv, Object.assign({\n        value: this._value,\n        language: this.language,\n        theme: this._theme,\n    }, this.editorOptions));\n    setTimeout(() => {\n        this._editorProxy = this.wrapEditorCalls(this._editor);\n        this._componentInitialized = true;\n        this.onEditorInitialized.emit(this._editorProxy);\n    });\n    this._editor.getModel().onDidChangeContent( (e: any) => {\n        this._fromEditor = true;\n        this.writeValue(this._editor.getValue());\n        if (this.initialContentChange) {\n            this.initialContentChange = false;\n            this.layout();\n        }\n    });\n    this.addFullScreenModeCommand();\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdCodeEditorComponent } from './code-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdCodeEditorComponent,\n  ],\n  exports: [\n    TdCodeEditorComponent,\n  ],\n  entryComponents: [ ],\n  bootstrap: [ TdCodeEditorComponent ],\n})\nexport class CovalentCodeEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentCodeEditorModule,\n      providers: [ ],\n    };\n  }\n}\n"]}